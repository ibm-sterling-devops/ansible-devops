{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IBM Sterling Devops Ansible \uf0c1 IBM Sterling Devops Project is an open source project to deploy IBM Sterling Products and other resources directly from the command line. Developed in Ansible, it provides a collection of playbooks and roles that automated deploy for IBM Sterling B2Bi, IBM Connect:Direct, ... on Redhat OpenShift. Current playbooks: Install Sterling Products (standalone) Install Connect:Direct (standalone) Install Sterling B2B Integrator (standalone) Deploy Sterling Products on Redhat OpenShift / Kubernetes Deploy IBM Sterling Connect:Direct Deploy IBM Sterling Connect:Direct Web Service Deploy IBM Sterling Transformation Server Deploy IBM Sterling Transformation Extender Advanced Deploy IBM Sterling B2B Integrator Deploy IBM Sterling Control Center Director/Monitor Deploy IBM Sterling External Authentication Server Deploy IBM Sterling Proxy Server on Redhat OpenShift (Engine, Configuration Manager, Perimeter) Contributors See the list of contributors who participated in this project. License This project is licensed under the Eclipse Public License - v 2.0 - see the LICENSE file for details Disclaimer This repository is a community-driven projects and is not officially supported or endorsed by IBM. While members of the community may include IBM employees, this project is independent of IBM's official support channels. Please note that any contributions, issues, or inquiries regarding this repository should be directed to the community maintainers and not to IBM's support teams. We appreciate your understanding and participation in this community-driven initiative. This code can be used as is. And any feedback will be welcome. We does not make any warranty about the completeness, reliability and accuracy of this code. Any action you take by using this code is strictly at your own risk, and this project will not be liable for any losses and damages in connection with the use of this code.","title":"Home"},{"location":"#ibm-sterling-devops-ansible","text":"IBM Sterling Devops Project is an open source project to deploy IBM Sterling Products and other resources directly from the command line. Developed in Ansible, it provides a collection of playbooks and roles that automated deploy for IBM Sterling B2Bi, IBM Connect:Direct, ... on Redhat OpenShift. Current playbooks: Install Sterling Products (standalone) Install Connect:Direct (standalone) Install Sterling B2B Integrator (standalone) Deploy Sterling Products on Redhat OpenShift / Kubernetes Deploy IBM Sterling Connect:Direct Deploy IBM Sterling Connect:Direct Web Service Deploy IBM Sterling Transformation Server Deploy IBM Sterling Transformation Extender Advanced Deploy IBM Sterling B2B Integrator Deploy IBM Sterling Control Center Director/Monitor Deploy IBM Sterling External Authentication Server Deploy IBM Sterling Proxy Server on Redhat OpenShift (Engine, Configuration Manager, Perimeter) Contributors See the list of contributors who participated in this project. License This project is licensed under the Eclipse Public License - v 2.0 - see the LICENSE file for details Disclaimer This repository is a community-driven projects and is not officially supported or endorsed by IBM. While members of the community may include IBM employees, this project is independent of IBM's official support channels. Please note that any contributions, issues, or inquiries regarding this repository should be directed to the community maintainers and not to IBM's support teams. We appreciate your understanding and participation in this community-driven initiative. This code can be used as is. And any feedback will be welcome. We does not make any warranty about the completeness, reliability and accuracy of this code. Any action you take by using this code is strictly at your own risk, and this project will not be liable for any losses and damages in connection with the use of this code.","title":"IBM Sterling Devops Ansible"},{"location":"requirements-macos/","text":"Installation Guide for kubectl, oc, git, helm and ansible on MacOS \uf0c1 Install kubectl \uf0c1 Install with Homebrew: brew install kubectl Test to ensure the version you installed is up-to-date: kubectl version --client Install git \uf0c1 Install with Homebrew: brew install git Verify the installation: git --version Install oc \uf0c1 Install with Homebrew: brew install openshift-cli Test to ensure the version you installed is up-to-date: oc version Install ansible \uf0c1 Install Ansible with Homebrew: brew install ansible Verify the installation: ansible --version","title":"MacOS"},{"location":"requirements-macos/#installation-guide-for-kubectl-oc-git-helm-and-ansible-on-macos","text":"","title":"Installation Guide for kubectl, oc, git, helm and ansible on MacOS"},{"location":"requirements-macos/#install-kubectl","text":"Install with Homebrew: brew install kubectl Test to ensure the version you installed is up-to-date: kubectl version --client","title":"Install kubectl"},{"location":"requirements-macos/#install-git","text":"Install with Homebrew: brew install git Verify the installation: git --version","title":"Install git"},{"location":"requirements-macos/#install-oc","text":"Install with Homebrew: brew install openshift-cli Test to ensure the version you installed is up-to-date: oc version","title":"Install oc"},{"location":"requirements-macos/#install-ansible","text":"Install Ansible with Homebrew: brew install ansible Verify the installation: ansible --version","title":"Install ansible"},{"location":"requirements-rh/","text":"Installation Guide for kubectl, oc, git, helm and ansible on Redhat Linux/Fedora/CentOS \uf0c1 Install kubectl and oc \uf0c1 Download the latest release: curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\" Extract the tar file: tar -xzvf openshift-client-linux.tar.gz Move the binaries to your PATH: chmod +x oc chmod +x kubectl sudo mv oc kubectl /usr/local/bin/ Test to ensure the version you installed is up-to-date: oc version Install helm \uf0c1 Download the latest release: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 $ chmod 700 get_helm.sh $ ./get_helm.sh Verify the installation: helm --version Install git, ansible, , python3-pip, java (keytool) \uf0c1 Install the dependencies: sudo yum -y install epel-release sudo yum -y update sudo yum -y install git ansible python3-pip java-17-openjdk-headless pip3.11 install kubernetes requests Install kubernetes.core module ansible-galaxy collection install kubernetes.core Verify the installation: ansible --version Verify the installation: helm --version","title":"Redhat Linux"},{"location":"requirements-rh/#installation-guide-for-kubectl-oc-git-helm-and-ansible-on-redhat-linuxfedoracentos","text":"","title":"Installation Guide for kubectl, oc, git, helm and ansible on Redhat Linux/Fedora/CentOS"},{"location":"requirements-rh/#install-kubectl-and-oc","text":"Download the latest release: curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\" Extract the tar file: tar -xzvf openshift-client-linux.tar.gz Move the binaries to your PATH: chmod +x oc chmod +x kubectl sudo mv oc kubectl /usr/local/bin/ Test to ensure the version you installed is up-to-date: oc version","title":"Install kubectl and oc"},{"location":"requirements-rh/#install-helm","text":"Download the latest release: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 $ chmod 700 get_helm.sh $ ./get_helm.sh Verify the installation: helm --version","title":"Install helm"},{"location":"requirements-rh/#install-git-ansible-python3-pip-java-keytool","text":"Install the dependencies: sudo yum -y install epel-release sudo yum -y update sudo yum -y install git ansible python3-pip java-17-openjdk-headless pip3.11 install kubernetes requests Install kubernetes.core module ansible-galaxy collection install kubernetes.core Verify the installation: ansible --version Verify the installation: helm --version","title":"Install git, ansible, , python3-pip, java (keytool)"},{"location":"requirements-ubuntu/","text":"Installation Guide for kubectl, oc, git, helm and ansible on Ubuntu/Debian \uf0c1 Install kubectl and oc \uf0c1 Download the latest release: curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\" Extract the tar file: tar -xzvf openshift-client-linux.tar.gz Move the binaries to your PATH: chmod +x oc chmod +x kubectl sudo mv oc kubectl /usr/local/bin/ Test to ensure the version you installed is up-to-date: oc version Install git, ansible, helm \uf0c1 Add the Helm dependencies: curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null sudo apt-get install apt-transport-https --yes echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list Add the Ansible PPA dependencies: sudo apt -y install software-properties-common sudo add-apt-repository --yes --update ppa:ansible/ansible Install packages sudo apt -y update sudo apt -y install git ansible helm Verify the installation: git --version Verify the installation: ansible --version Verify the installation: helm --version","title":"Ubuntu Linux"},{"location":"requirements-ubuntu/#installation-guide-for-kubectl-oc-git-helm-and-ansible-on-ubuntudebian","text":"","title":"Installation Guide for kubectl, oc, git, helm and ansible on Ubuntu/Debian"},{"location":"requirements-ubuntu/#install-kubectl-and-oc","text":"Download the latest release: curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\" Extract the tar file: tar -xzvf openshift-client-linux.tar.gz Move the binaries to your PATH: chmod +x oc chmod +x kubectl sudo mv oc kubectl /usr/local/bin/ Test to ensure the version you installed is up-to-date: oc version","title":"Install kubectl and oc"},{"location":"requirements-ubuntu/#install-git-ansible-helm","text":"Add the Helm dependencies: curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null sudo apt-get install apt-transport-https --yes echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list Add the Ansible PPA dependencies: sudo apt -y install software-properties-common sudo add-apt-repository --yes --update ppa:ansible/ansible Install packages sudo apt -y update sudo apt -y install git ansible helm Verify the installation: git --version Verify the installation: ansible --version Verify the installation: helm --version","title":"Install git, ansible, helm"},{"location":"requirements-windows/","text":"Installation Guide for kubectl, oc, git, helm and ansible on MS Windows using WSL \uf0c1 Install WSL \uf0c1 Open PowerShell as Administrator and run: wsl --install Restart your computer if prompted. Install a Linux distribution from the Microsoft Store (e.g., Ubuntu). Set up WSL \uf0c1 Open your installed Linux distribution. Install kubectl and oc \uf0c1 Download the latest release: curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\" Extract the tar file: tar -xzvf openshift-client-linux.tar.gz Move the binaries to your PATH: chmod +x oc chmod +x kubectl sudo mv oc kubectl /usr/local/bin/ Test to ensure the version you installed is up-to-date: oc version Install git, ansible, helm \uf0c1 Add the Helm dependencies: curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null sudo apt-get install apt-transport-https --yes echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list Add the Ansible PPA dependencies: sudo apt -y install software-properties-common sudo add-apt-repository --yes --update ppa:ansible/ansible Install packages sudo apt -y update sudo apt -y install git ansible helm Verify the installation: git --version Verify the installation: ansible --version Verify the installation: helm --version","title":"MS Windows"},{"location":"requirements-windows/#installation-guide-for-kubectl-oc-git-helm-and-ansible-on-ms-windows-using-wsl","text":"","title":"Installation Guide for kubectl, oc, git, helm and ansible on MS Windows using WSL"},{"location":"requirements-windows/#install-wsl","text":"Open PowerShell as Administrator and run: wsl --install Restart your computer if prompted. Install a Linux distribution from the Microsoft Store (e.g., Ubuntu).","title":"Install WSL"},{"location":"requirements-windows/#set-up-wsl","text":"Open your installed Linux distribution.","title":"Set up WSL"},{"location":"requirements-windows/#install-kubectl-and-oc","text":"Download the latest release: curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\" Extract the tar file: tar -xzvf openshift-client-linux.tar.gz Move the binaries to your PATH: chmod +x oc chmod +x kubectl sudo mv oc kubectl /usr/local/bin/ Test to ensure the version you installed is up-to-date: oc version","title":"Install kubectl and oc"},{"location":"requirements-windows/#install-git-ansible-helm","text":"Add the Helm dependencies: curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null sudo apt-get install apt-transport-https --yes echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list Add the Ansible PPA dependencies: sudo apt -y install software-properties-common sudo add-apt-repository --yes --update ppa:ansible/ansible Install packages sudo apt -y update sudo apt -y install git ansible helm Verify the installation: git --version Verify the installation: ansible --version Verify the installation: helm --version","title":"Install git, ansible, helm"},{"location":"others/known_problems/","text":"Known problems \uf0c1 Connect:Direct Versions: 6.3.0.0_ifix016 and Helm Version: 1.3.1 \uf0c1 SPCLI> SPCG760E rc=8 CMS KeyStore open exception - Invalid KeyStore Format.. [2024/03/18 17:30:42.46 ] | [ERROR] | Failure in generating self-signed certificate with RC=8. Line no: 221 In IBM Cloud, the StorageClass of the ReadWriteOnce type, which is requested in the values.yaml of the Helm chart, is ibmc-block-gold . But when using this storageClass I had permission problems. When changing to the ibmc-file-gold and/or ibmc-file-gold-gid storageClass, I had no problems running C:D in Container, both storageClasses are of the ReadWriteMany type.","title":"Known Problems"},{"location":"others/known_problems/#known-problems","text":"","title":"Known problems"},{"location":"others/known_problems/#connectdirect-versions-6300_ifix016-and-helm-version-131","text":"SPCLI> SPCG760E rc=8 CMS KeyStore open exception - Invalid KeyStore Format.. [2024/03/18 17:30:42.46 ] | [ERROR] | Failure in generating self-signed certificate with RC=8. Line no: 221 In IBM Cloud, the StorageClass of the ReadWriteOnce type, which is requested in the values.yaml of the Helm chart, is ibmc-block-gold . But when using this storageClass I had permission problems. When changing to the ibmc-file-gold and/or ibmc-file-gold-gid storageClass, I had no problems running C:D in Container, both storageClasses are of the ReadWriteMany type.","title":"Connect:Direct Versions: 6.3.0.0_ifix016 and Helm Version: 1.3.1"},{"location":"playbooks/deploy_ocp_cd/","text":"Deploy IBM Sterling Connect:Direct on OpenShift using Ansible Scripts \uf0c1 Preparation \uf0c1 1. IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> 2. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 3. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 4. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploy you Connect:Direct \uf0c1 1) Define C:D node name export CD_NODENAME=CDNODE01 2) To run the playbook ansible-playbook playbooks/deploy_cd.yml check for sterling-cdnode01-dev namespace. The C:D node name will be CDNODE01 Examples \uf0c1 Example 1: Change namespace and C:D node name \uf0c1 To change namespace/project and C:D node name cd ansible-ibm-sterling export CD_NAMESPACE=sterling-cdcompany01-prod export CD_NODENAME=COMPANY01 ansible-playbook playbooks/deploy_cd.yml Environment Variable \uf0c1 For all environment variables Role cd_deploy","title":"Deploy IBM Connect:Direct 6.3.x"},{"location":"playbooks/deploy_ocp_cd/#deploy-ibm-sterling-connectdirect-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Connect:Direct on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_cd/#preparation","text":"","title":"Preparation"},{"location":"playbooks/deploy_ocp_cd/#1-ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"1. IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_cd/#2-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"2. Login on OpenShift"},{"location":"playbooks/deploy_ocp_cd/#3-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"3. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_cd/#4-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"4. Set roles path"},{"location":"playbooks/deploy_ocp_cd/#deploy-you-connectdirect","text":"1) Define C:D node name export CD_NODENAME=CDNODE01 2) To run the playbook ansible-playbook playbooks/deploy_cd.yml check for sterling-cdnode01-dev namespace. The C:D node name will be CDNODE01","title":"Deploy you Connect:Direct"},{"location":"playbooks/deploy_ocp_cd/#examples","text":"","title":"Examples"},{"location":"playbooks/deploy_ocp_cd/#example-1-change-namespace-and-cd-node-name","text":"To change namespace/project and C:D node name cd ansible-ibm-sterling export CD_NAMESPACE=sterling-cdcompany01-prod export CD_NODENAME=COMPANY01 ansible-playbook playbooks/deploy_cd.yml","title":"Example 1: Change namespace and C:D node name"},{"location":"playbooks/deploy_ocp_cd/#environment-variable","text":"For all environment variables Role cd_deploy","title":"Environment Variable"},{"location":"playbooks/deploy_ocp_cdws/","text":"Deploy IBM Sterling Connect:Direct WebService on OpenShift using Ansible Scripts \uf0c1 Preparation \uf0c1 1. IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> 2. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 3. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 4. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploy you Connect:Direct WebService \uf0c1 1) To run the playbook ansible-playbook playbooks/deploy_cdws.yml check for sterling-cdws01 namespace in Kubernetes/Openshift console. Examples \uf0c1 Example 1: Change namespace and C:D node name \uf0c1 To change namespace/project and C:D node name cd ansible-ibm-sterling export CDWS_NAMESPACE=sterling-cdws01 ansible-playbook playbooks/deploy_cd.yml Environment Variable \uf0c1 For all environment variables Role cd_deploy","title":"Deploy IBM Connect:Direct WebServices"},{"location":"playbooks/deploy_ocp_cdws/#deploy-ibm-sterling-connectdirect-webservice-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Connect:Direct WebService on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_cdws/#preparation","text":"","title":"Preparation"},{"location":"playbooks/deploy_ocp_cdws/#1-ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"1. IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_cdws/#2-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"2. Login on OpenShift"},{"location":"playbooks/deploy_ocp_cdws/#3-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"3. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_cdws/#4-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"4. Set roles path"},{"location":"playbooks/deploy_ocp_cdws/#deploy-you-connectdirect-webservice","text":"1) To run the playbook ansible-playbook playbooks/deploy_cdws.yml check for sterling-cdws01 namespace in Kubernetes/Openshift console.","title":"Deploy you Connect:Direct WebService"},{"location":"playbooks/deploy_ocp_cdws/#examples","text":"","title":"Examples"},{"location":"playbooks/deploy_ocp_cdws/#example-1-change-namespace-and-cd-node-name","text":"To change namespace/project and C:D node name cd ansible-ibm-sterling export CDWS_NAMESPACE=sterling-cdws01 ansible-playbook playbooks/deploy_cd.yml","title":"Example 1: Change namespace and C:D node name"},{"location":"playbooks/deploy_ocp_cdws/#environment-variable","text":"For all environment variables Role cd_deploy","title":"Environment Variable"},{"location":"playbooks/deploy_ocp_itx_rs/","text":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts \uf0c1 Preparation \uf0c1 1. IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> 2. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 3. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 4. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploy ITX RS \uf0c1 1) Define namespace export ITX_RS_NAMESPACE=ibm-itx-rs-dev01 2) To run the playbook ansible-playbook playbooks/deploy_itx_rs.yml Environment Variable \uf0c1 For all environment variables Role itx_rs_deploy","title":"Deploy IBM Sterling Transformation Server (ITX RS)"},{"location":"playbooks/deploy_ocp_itx_rs/#deploy-ibm-sterling-transformation-server-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_itx_rs/#preparation","text":"","title":"Preparation"},{"location":"playbooks/deploy_ocp_itx_rs/#1-ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"1. IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_itx_rs/#2-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"2. Login on OpenShift"},{"location":"playbooks/deploy_ocp_itx_rs/#3-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"3. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_itx_rs/#4-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"4. Set roles path"},{"location":"playbooks/deploy_ocp_itx_rs/#deploy-itx-rs","text":"1) Define namespace export ITX_RS_NAMESPACE=ibm-itx-rs-dev01 2) To run the playbook ansible-playbook playbooks/deploy_itx_rs.yml","title":"Deploy ITX RS"},{"location":"playbooks/deploy_ocp_itx_rs/#environment-variable","text":"For all environment variables Role itx_rs_deploy","title":"Environment Variable"},{"location":"playbooks/deploy_ocp_itxa/","text":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts \uf0c1 Preparation \uf0c1 1. IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> 2. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 3. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 4. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploy ITXA \uf0c1 1) First you need to provide ITXA_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export ITXA_INSTANCEID=dev01 2) To run the playbook ansible-playbook playbooks/deploy_itxa.yml Environment Variable \uf0c1 For all environment variables Role itxa_deploy Role itxa_setup_db2 Role itxa_deploy_db2","title":"Deploy IBM Sterling Transformation Advanced (ITXA)"},{"location":"playbooks/deploy_ocp_itxa/#deploy-ibm-sterling-transformation-server-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_itxa/#preparation","text":"","title":"Preparation"},{"location":"playbooks/deploy_ocp_itxa/#1-ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"1. IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_itxa/#2-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"2. Login on OpenShift"},{"location":"playbooks/deploy_ocp_itxa/#3-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"3. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_itxa/#4-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"4. Set roles path"},{"location":"playbooks/deploy_ocp_itxa/#deploy-itxa","text":"1) First you need to provide ITXA_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export ITXA_INSTANCEID=dev01 2) To run the playbook ansible-playbook playbooks/deploy_itxa.yml","title":"Deploy ITXA"},{"location":"playbooks/deploy_ocp_itxa/#environment-variable","text":"For all environment variables Role itxa_deploy Role itxa_setup_db2 Role itxa_deploy_db2","title":"Environment Variable"},{"location":"playbooks/deploy_ocp_sb2b/","text":"Deploy IBM Sterling B2B Integrator on OpenShift using Ansible Scripts \uf0c1 Playbook will run the last version of Sterling B2Bi, but take care of Kubernetes/Openshift version is supported Sterling B2Bi helm-chart Kubernetes OpenShift Helm 6.2.0.2 3.0.4 >= 1.27 and <= 1.29 >= 4.14 and <= 4.15 >= 3.14.x 6.2.0.1 3.0.1 >= 1.26 and <= 1.28 >= 4.13 and <= 4.14 >= 3.13.x 6.2.0.0 3.0.0 >= 1.25 and <= 1.27 >= 4.12 and <= 4.13 >= 3.12.x Check with kubectl version Preparation \uf0c1 1. IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> 2. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 3. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 4. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploying Sterling B2B Integrator \uf0c1 1) First you need to provide SI_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SI_INSTANCEID=dev01 2) (Optional) change your version: We always run the last version of Sterling B2Bi, but you can choose to run a different version, based on your RH OpenShift version. export SI_VERSION=6.2.0.2 3) To run playbook the playbook ansible-playbook playbooks/deploy_sb2b.yml Deploy Sterling B2Bi using prebuilt db. \uf0c1 If your using SB2Bi for a prove of concept and get the environment provided in 10 minutes, i suggest to deploy using prebuilt db. Tip You need to have a backup from a previous install, we cannot provide because of copyright 1) Define previous environment variables export SI_INSTANCEID=dev01 2) Provide your Sterling B2BI database backup export SI_PREBUILTDB_FILE=/tmp/B2BI_6202.tar.gz 3) disable database setup and upgrade export SI_DATASETUP_ENABLED=false export SI_DATASETUP_UPGRADE=false 4) Run prebuilt playbook ansible-playbook playbooks/deploy_sb2b_prebuiltdb.yml Environment Variable \uf0c1 For all environment variables Role sb2bi_deploy Role sb2bi_setup_db2 Role sb2bi_deploy_db2 Role sb2bi_deploy_mq Role sb2bi_prebuiltdb_db2","title":"Deploy IBM Sterling B2B Integrator"},{"location":"playbooks/deploy_ocp_sb2b/#deploy-ibm-sterling-b2b-integrator-on-openshift-using-ansible-scripts","text":"Playbook will run the last version of Sterling B2Bi, but take care of Kubernetes/Openshift version is supported Sterling B2Bi helm-chart Kubernetes OpenShift Helm 6.2.0.2 3.0.4 >= 1.27 and <= 1.29 >= 4.14 and <= 4.15 >= 3.14.x 6.2.0.1 3.0.1 >= 1.26 and <= 1.28 >= 4.13 and <= 4.14 >= 3.13.x 6.2.0.0 3.0.0 >= 1.25 and <= 1.27 >= 4.12 and <= 4.13 >= 3.12.x Check with kubectl version","title":"Deploy IBM Sterling B2B Integrator on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_sb2b/#preparation","text":"","title":"Preparation"},{"location":"playbooks/deploy_ocp_sb2b/#1-ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"1. IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_sb2b/#2-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"2. Login on OpenShift"},{"location":"playbooks/deploy_ocp_sb2b/#3-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"3. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_sb2b/#4-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"4. Set roles path"},{"location":"playbooks/deploy_ocp_sb2b/#deploying-sterling-b2b-integrator","text":"1) First you need to provide SI_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SI_INSTANCEID=dev01 2) (Optional) change your version: We always run the last version of Sterling B2Bi, but you can choose to run a different version, based on your RH OpenShift version. export SI_VERSION=6.2.0.2 3) To run playbook the playbook ansible-playbook playbooks/deploy_sb2b.yml","title":"Deploying Sterling B2B Integrator"},{"location":"playbooks/deploy_ocp_sb2b/#deploy-sterling-b2bi-using-prebuilt-db","text":"If your using SB2Bi for a prove of concept and get the environment provided in 10 minutes, i suggest to deploy using prebuilt db. Tip You need to have a backup from a previous install, we cannot provide because of copyright 1) Define previous environment variables export SI_INSTANCEID=dev01 2) Provide your Sterling B2BI database backup export SI_PREBUILTDB_FILE=/tmp/B2BI_6202.tar.gz 3) disable database setup and upgrade export SI_DATASETUP_ENABLED=false export SI_DATASETUP_UPGRADE=false 4) Run prebuilt playbook ansible-playbook playbooks/deploy_sb2b_prebuiltdb.yml","title":"Deploy Sterling B2Bi using prebuilt db."},{"location":"playbooks/deploy_ocp_sb2b/#environment-variable","text":"For all environment variables Role sb2bi_deploy Role sb2bi_setup_db2 Role sb2bi_deploy_db2 Role sb2bi_deploy_mq Role sb2bi_prebuiltdb_db2","title":"Environment Variable"},{"location":"playbooks/deploy_ocp_scc/","text":"Deploy IBM Sterling Control Center on OpenShift using Ansible Scripts \uf0c1 Preparation \uf0c1 1. IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> 2. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 3. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 4. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploying Sterling Control Center \uf0c1 1) First you need to provide SCC_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SCC_INSTANCEID=dev01 2) You must define which product to install export SCC_PRODUCTS=CCM,CCD where SCC_PRODUCTS is the product that you want to install Product Description CCD Sterling Control Center Director CCM Sterling Control Center Monitor 3) To run the playbook ansible-playbook playbooks/deploy_scc.yml Environment Variable \uf0c1 For all environment variables Role scc_deploy Role scc_setup_db2 Role scc_deploy_db2 Role scc_deploy_mq","title":"Deploy IBM Sterling Control Center Monitor/Director (CCM/CCD)"},{"location":"playbooks/deploy_ocp_scc/#deploy-ibm-sterling-control-center-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Control Center on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_scc/#preparation","text":"","title":"Preparation"},{"location":"playbooks/deploy_ocp_scc/#1-ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"1. IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_scc/#2-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"2. Login on OpenShift"},{"location":"playbooks/deploy_ocp_scc/#3-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"3. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_scc/#4-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"4. Set roles path"},{"location":"playbooks/deploy_ocp_scc/#deploying-sterling-control-center","text":"1) First you need to provide SCC_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SCC_INSTANCEID=dev01 2) You must define which product to install export SCC_PRODUCTS=CCM,CCD where SCC_PRODUCTS is the product that you want to install Product Description CCD Sterling Control Center Director CCM Sterling Control Center Monitor 3) To run the playbook ansible-playbook playbooks/deploy_scc.yml","title":"Deploying Sterling Control Center"},{"location":"playbooks/deploy_ocp_scc/#environment-variable","text":"For all environment variables Role scc_deploy Role scc_setup_db2 Role scc_deploy_db2 Role scc_deploy_mq","title":"Environment Variable"},{"location":"playbooks/deploy_ocp_seas/","text":"Deploy IBM Sterling External Authentication Server on OpenShift using Ansible Scripts \uf0c1 Playbook will run the last version of SEAS, but take care of Kubernetes/Openshift version is supported SEAS helm-chart Kubernetes OpenShift Helm 6.1.0.0.07 1.3.8 >=1.26.0 >= 4.13 -- 6.1.0.0.06 1.3.7 >=1.19.0 -- -- Check with kubectl version Preparation \uf0c1 1. IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> 2. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 3. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 4. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploying Sterling External Authentication Server \uf0c1 1) Change namespace export SEAS_NAMESPACE=sterling-seas-dev01 2) To run the playbook ansible-playbook playbooks/deploy_seas.yml Environment Variable \uf0c1 For all environment variables Role seas_deploy","title":"Deploy IBM Sterling External Authentication Server (SEAS)"},{"location":"playbooks/deploy_ocp_seas/#deploy-ibm-sterling-external-authentication-server-on-openshift-using-ansible-scripts","text":"Playbook will run the last version of SEAS, but take care of Kubernetes/Openshift version is supported SEAS helm-chart Kubernetes OpenShift Helm 6.1.0.0.07 1.3.8 >=1.26.0 >= 4.13 -- 6.1.0.0.06 1.3.7 >=1.19.0 -- -- Check with kubectl version","title":"Deploy IBM Sterling External Authentication Server on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_seas/#preparation","text":"","title":"Preparation"},{"location":"playbooks/deploy_ocp_seas/#1-ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"1. IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_seas/#2-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"2. Login on OpenShift"},{"location":"playbooks/deploy_ocp_seas/#3-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"3. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_seas/#4-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"4. Set roles path"},{"location":"playbooks/deploy_ocp_seas/#deploying-sterling-external-authentication-server","text":"1) Change namespace export SEAS_NAMESPACE=sterling-seas-dev01 2) To run the playbook ansible-playbook playbooks/deploy_seas.yml","title":"Deploying Sterling External Authentication Server"},{"location":"playbooks/deploy_ocp_seas/#environment-variable","text":"For all environment variables Role seas_deploy","title":"Environment Variable"},{"location":"playbooks/deploy_ocp_ssp/","text":"Deploy IBM Sterling Secure Proxy on OpenShift using Ansible Scripts \uf0c1 Playbook will run the last version of SEAS, but take care of Kubernetes/Openshift version is supported SSP helm-chart Kubernetes OpenShift Helm 6.1.0.0.04 1.3.6 >=1.26.0 >= 4.13 -- 6.1.0.0.03plus 1.3.5 >=1.19.0 -- -- Check with kubectl version Preparation \uf0c1 1. IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> 2. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 3. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 4. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploying Sterling Secure Proxy \uf0c1 1) First you need to provide SSP_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SSP_INSTANCEID=dev01 2) To run the playbook ansible-playbook playbooks/dev_ssp.yml Environment Variable \uf0c1 For all environment variables Role ssp_cm_deploy Role ssp_deploy Role ssp_ps_deploy Role ssp_config","title":"Deploy IBM Sterling Secure Proxy Server (SSP)"},{"location":"playbooks/deploy_ocp_ssp/#deploy-ibm-sterling-secure-proxy-on-openshift-using-ansible-scripts","text":"Playbook will run the last version of SEAS, but take care of Kubernetes/Openshift version is supported SSP helm-chart Kubernetes OpenShift Helm 6.1.0.0.04 1.3.6 >=1.26.0 >= 4.13 -- 6.1.0.0.03plus 1.3.5 >=1.19.0 -- -- Check with kubectl version","title":"Deploy IBM Sterling Secure Proxy on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_ssp/#preparation","text":"","title":"Preparation"},{"location":"playbooks/deploy_ocp_ssp/#1-ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"1. IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_ssp/#2-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"2. Login on OpenShift"},{"location":"playbooks/deploy_ocp_ssp/#3-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"3. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_ssp/#4-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"4. Set roles path"},{"location":"playbooks/deploy_ocp_ssp/#deploying-sterling-secure-proxy","text":"1) First you need to provide SSP_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SSP_INSTANCEID=dev01 2) To run the playbook ansible-playbook playbooks/dev_ssp.yml","title":"Deploying Sterling Secure Proxy"},{"location":"playbooks/deploy_ocp_ssp/#environment-variable","text":"For all environment variables Role ssp_cm_deploy Role ssp_deploy Role ssp_ps_deploy Role ssp_config","title":"Environment Variable"},{"location":"playbooks/setup_b2b/","text":"Getting start \uf0c1 Prerequisites \uf0c1 Download installation files: \uf0c1 Product Name PartNum Filename Description | IBM DB2 V11.5.x | | DB2S_11.5.4_MPML.tar.gz | IBM DB2 V11.5.4 Multi-platform Multi-language| | IBM Java SDK/JRE | M06M9ML | SB2BI_6.1.2_MP_ML_JDK.zip | IBM Sterling B2B Integrator V6.1.2 or IBM Sterling File Gateway V6.1.2 Java SDK/JRE Multiplatform| | IBM Sterling B2B Integrator | M06MCML | SB2BI_6.1.2_MP_ML.zip | IBM Sterling B2B Integrator V6.1.2 for Multiplatform Multilingual| | IBM Java Unrestricted Policy | | unrestrictedpolicyfiles.zip | | Install Nginx \uf0c1 First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp <files> /usr/share/nginx/html Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Create a inventory file \uf0c1 Copy from template cd ansible-ibm-sterling cp environments/sb2b-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like DB2 server, Sterling Integrator node name, ... Provide information for you nginx server Running playbooks \uf0c1 Install Sterling B2B (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-sb2b.yml","title":"Install IBM Sterling B2B Integrator 6.1.2"},{"location":"playbooks/setup_b2b/#getting-start","text":"","title":"Getting start"},{"location":"playbooks/setup_b2b/#prerequisites","text":"","title":"Prerequisites"},{"location":"playbooks/setup_b2b/#download-installation-files","text":"Product Name PartNum Filename Description | IBM DB2 V11.5.x | | DB2S_11.5.4_MPML.tar.gz | IBM DB2 V11.5.4 Multi-platform Multi-language| | IBM Java SDK/JRE | M06M9ML | SB2BI_6.1.2_MP_ML_JDK.zip | IBM Sterling B2B Integrator V6.1.2 or IBM Sterling File Gateway V6.1.2 Java SDK/JRE Multiplatform| | IBM Sterling B2B Integrator | M06MCML | SB2BI_6.1.2_MP_ML.zip | IBM Sterling B2B Integrator V6.1.2 for Multiplatform Multilingual| | IBM Java Unrestricted Policy | | unrestrictedpolicyfiles.zip | |","title":"Download installation files:"},{"location":"playbooks/setup_b2b/#install-nginx","text":"First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp <files> /usr/share/nginx/html","title":"Install Nginx"},{"location":"playbooks/setup_b2b/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/setup_b2b/#create-a-inventory-file","text":"Copy from template cd ansible-ibm-sterling cp environments/sb2b-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like DB2 server, Sterling Integrator node name, ... Provide information for you nginx server","title":"Create a inventory file"},{"location":"playbooks/setup_b2b/#running-playbooks","text":"Install Sterling B2B (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-sb2b.yml","title":"Running playbooks"},{"location":"playbooks/setup_cd/","text":"Getting start \uf0c1 Prerequisites \uf0c1 Download installation files: \uf0c1 Product Name PartNum Filename Description IBM Connect:Direct IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z IBM Connect:Direct 6.2.x Install Nginx \uf0c1 First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z /usr/share/nginx/html Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Create a inventory file \uf0c1 Copy from template cd ansible-ibm-sterling cp environments/cd-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like C:D node name and ip address. Provide information for you nginx server Running playbooks \uf0c1 Install Connect:Direct (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-cd.yml","title":"Install IBM Connect:Direct 6.2.x"},{"location":"playbooks/setup_cd/#getting-start","text":"","title":"Getting start"},{"location":"playbooks/setup_cd/#prerequisites","text":"","title":"Prerequisites"},{"location":"playbooks/setup_cd/#download-installation-files","text":"Product Name PartNum Filename Description IBM Connect:Direct IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z IBM Connect:Direct 6.2.x","title":"Download installation files:"},{"location":"playbooks/setup_cd/#install-nginx","text":"First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z /usr/share/nginx/html","title":"Install Nginx"},{"location":"playbooks/setup_cd/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/setup_cd/#create-a-inventory-file","text":"Copy from template cd ansible-ibm-sterling cp environments/cd-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like C:D node name and ip address. Provide information for you nginx server","title":"Create a inventory file"},{"location":"playbooks/setup_cd/#running-playbooks","text":"Install Connect:Direct (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-cd.yml","title":"Running playbooks"},{"location":"playbooks/tools_deploy_cert_manager/","text":"Deploy Cert Manager on OpenShift using Ansible Scripts \uf0c1 Using Cert-Manager using Redhat operator Preparation \uf0c1 1. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 2. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 3. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploy Cert Manager \uf0c1 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/tools/certmanager.yml Environment Variable \uf0c1 For all environment variables Role cert_manager","title":"Deploy Cert Manager on OpenShift using Ansible Scripts"},{"location":"playbooks/tools_deploy_cert_manager/#deploy-cert-manager-on-openshift-using-ansible-scripts","text":"Using Cert-Manager using Redhat operator","title":"Deploy Cert Manager on OpenShift using Ansible Scripts"},{"location":"playbooks/tools_deploy_cert_manager/#preparation","text":"","title":"Preparation"},{"location":"playbooks/tools_deploy_cert_manager/#1-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"1. Login on OpenShift"},{"location":"playbooks/tools_deploy_cert_manager/#2-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"2. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/tools_deploy_cert_manager/#3-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"3. Set roles path"},{"location":"playbooks/tools_deploy_cert_manager/#deploy-cert-manager","text":"","title":"Deploy Cert Manager"},{"location":"playbooks/tools_deploy_cert_manager/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/tools/certmanager.yml","title":"Run the Plabook"},{"location":"playbooks/tools_deploy_cert_manager/#environment-variable","text":"For all environment variables Role cert_manager","title":"Environment Variable"},{"location":"playbooks/tools_deploy_cloudbeaver/","text":"Deploy Cloudbeaver on OpenShift using Ansible Scripts \uf0c1 Preparation \uf0c1 1. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 2. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 3. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploy Cloud beaver \uf0c1 1. Run the Playbook \uf0c1 To run playbook the playbook ansible-playbook playbooks/tools/cloudbeaver.yml Environment Variable \uf0c1 For all environment variables Role cloudbeaver","title":"Deploy CloudBeaver CE"},{"location":"playbooks/tools_deploy_cloudbeaver/#deploy-cloudbeaver-on-openshift-using-ansible-scripts","text":"","title":"Deploy Cloudbeaver on OpenShift using Ansible Scripts"},{"location":"playbooks/tools_deploy_cloudbeaver/#preparation","text":"","title":"Preparation"},{"location":"playbooks/tools_deploy_cloudbeaver/#1-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"1. Login on OpenShift"},{"location":"playbooks/tools_deploy_cloudbeaver/#2-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"2. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/tools_deploy_cloudbeaver/#3-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"3. Set roles path"},{"location":"playbooks/tools_deploy_cloudbeaver/#deploy-cloud-beaver","text":"","title":"Deploy Cloud beaver"},{"location":"playbooks/tools_deploy_cloudbeaver/#1-run-the-playbook","text":"To run playbook the playbook ansible-playbook playbooks/tools/cloudbeaver.yml","title":"1. Run the Playbook"},{"location":"playbooks/tools_deploy_cloudbeaver/#environment-variable","text":"For all environment variables Role cloudbeaver","title":"Environment Variable"},{"location":"playbooks/tools_deploy_kafka/","text":"Deploy Kafka on OpenShift using Ansible Scripts \uf0c1 Using Strimzi or Redhat operator Preparation \uf0c1 1. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 2. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 3. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploy Cloud beaver \uf0c1 1. Run the Playbook \uf0c1 To run playbook the playbook ansible-playbook playbooks/tools/kafka.yml Environment Variable \uf0c1 For all environment variables Role kafka","title":"Deploy Kafka"},{"location":"playbooks/tools_deploy_kafka/#deploy-kafka-on-openshift-using-ansible-scripts","text":"Using Strimzi or Redhat operator","title":"Deploy Kafka on OpenShift using Ansible Scripts"},{"location":"playbooks/tools_deploy_kafka/#preparation","text":"","title":"Preparation"},{"location":"playbooks/tools_deploy_kafka/#1-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"1. Login on OpenShift"},{"location":"playbooks/tools_deploy_kafka/#2-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"2. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/tools_deploy_kafka/#3-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"3. Set roles path"},{"location":"playbooks/tools_deploy_kafka/#deploy-cloud-beaver","text":"","title":"Deploy Cloud beaver"},{"location":"playbooks/tools_deploy_kafka/#1-run-the-playbook","text":"To run playbook the playbook ansible-playbook playbooks/tools/kafka.yml","title":"1. Run the Playbook"},{"location":"playbooks/tools_deploy_kafka/#environment-variable","text":"For all environment variables Role kafka","title":"Environment Variable"},{"location":"playbooks/tools_deploy_kowl/","text":"Deploy Kowl on OpenShift using Ansible Scripts \uf0c1 Kowl is a Web UI for Kafa Preparation \uf0c1 1. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 2. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 3. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploy Cloud beaver \uf0c1 1. Run the Playbook \uf0c1 To run playbook the playbook ansible-playbook playbooks/tools/kowl.yml Environment Variable \uf0c1 For all environment variables Role kowl","title":"Deploy Kowl"},{"location":"playbooks/tools_deploy_kowl/#deploy-kowl-on-openshift-using-ansible-scripts","text":"Kowl is a Web UI for Kafa","title":"Deploy Kowl on OpenShift using Ansible Scripts"},{"location":"playbooks/tools_deploy_kowl/#preparation","text":"","title":"Preparation"},{"location":"playbooks/tools_deploy_kowl/#1-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"1. Login on OpenShift"},{"location":"playbooks/tools_deploy_kowl/#2-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"2. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/tools_deploy_kowl/#3-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"3. Set roles path"},{"location":"playbooks/tools_deploy_kowl/#deploy-cloud-beaver","text":"","title":"Deploy Cloud beaver"},{"location":"playbooks/tools_deploy_kowl/#1-run-the-playbook","text":"To run playbook the playbook ansible-playbook playbooks/tools/kowl.yml","title":"1. Run the Playbook"},{"location":"playbooks/tools_deploy_kowl/#environment-variable","text":"For all environment variables Role kowl","title":"Environment Variable"},{"location":"playbooks/tools_deploy_minio/","text":"Deploy MinIO on OpenShift using Ansible Scripts \uf0c1 Preparation \uf0c1 1. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 2. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 3. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploy Cloud beaver \uf0c1 1. Run the Playbook \uf0c1 To run playbook the playbook ansible-playbook playbooks/tools/minio.yml Environment Variable \uf0c1 For all environment variables Role minio","title":"Deploy MinIO S3 storage"},{"location":"playbooks/tools_deploy_minio/#deploy-minio-on-openshift-using-ansible-scripts","text":"","title":"Deploy MinIO on OpenShift using Ansible Scripts"},{"location":"playbooks/tools_deploy_minio/#preparation","text":"","title":"Preparation"},{"location":"playbooks/tools_deploy_minio/#1-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"1. Login on OpenShift"},{"location":"playbooks/tools_deploy_minio/#2-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"2. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/tools_deploy_minio/#3-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"3. Set roles path"},{"location":"playbooks/tools_deploy_minio/#deploy-cloud-beaver","text":"","title":"Deploy Cloud beaver"},{"location":"playbooks/tools_deploy_minio/#1-run-the-playbook","text":"To run playbook the playbook ansible-playbook playbooks/tools/minio.yml","title":"1. Run the Playbook"},{"location":"playbooks/tools_deploy_minio/#environment-variable","text":"For all environment variables Role minio","title":"Environment Variable"},{"location":"playbooks/tools_deploy_openldap/","text":"Deploy OpenLDAP on OpenShift using Ansible Scripts \uf0c1 Preparation \uf0c1 1. Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 2. Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git 3. Set roles path \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Deploy Cloud beaver \uf0c1 1. Run the Playbook \uf0c1 To run playbook the playbook ansible-playbook playbooks/tools/openldap.yml Environment Variable \uf0c1 For all environment variables Role openldap Role phpldapadmin","title":"Deploy OpenLDAP as LDAP Server"},{"location":"playbooks/tools_deploy_openldap/#deploy-openldap-on-openshift-using-ansible-scripts","text":"","title":"Deploy OpenLDAP on OpenShift using Ansible Scripts"},{"location":"playbooks/tools_deploy_openldap/#preparation","text":"","title":"Preparation"},{"location":"playbooks/tools_deploy_openldap/#1-login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"1. Login on OpenShift"},{"location":"playbooks/tools_deploy_openldap/#2-cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"2. Cloning ansible-ibm-websphere from git"},{"location":"playbooks/tools_deploy_openldap/#3-set-roles-path","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"3. Set roles path"},{"location":"playbooks/tools_deploy_openldap/#deploy-cloud-beaver","text":"","title":"Deploy Cloud beaver"},{"location":"playbooks/tools_deploy_openldap/#1-run-the-playbook","text":"To run playbook the playbook ansible-playbook playbooks/tools/openldap.yml","title":"1. Run the Playbook"},{"location":"playbooks/tools_deploy_openldap/#environment-variable","text":"For all environment variables Role openldap Role phpldapadmin","title":"Environment Variable"},{"location":"roles/cd_deploy/","text":"Role cd_deploy \uf0c1 Deploy Connect:direct Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY - Yes Entitlement registry key CD_NAMESPACE sterling-cdnode01-dev No Namespace for C:D application CD_NODENAME CDNODE01 No Specify the nodename of C:D CD_VERSION 6.3.0.3_ifix003 No Version of C:D container to deploy CD_ADMINPASSWORD passw0rd No Password for C:D Admin CD_APPUSER_PWD passw0rd No Password for C:D User CD_LOCALCERTPASSPHRASE changeit No Passphrase for local certificate CD_KEYSTOREPASSWORD changeit No Password for keystore CD_LICENSE_TYPE non-prod No License type for C:D (prod or non-prod) CD_STORAGE_CLASS - No Storage class to be used for the container CD_STORAGE_CAPACITY 1Gi No Storage capacity to be allocated to the container CD_CPU_LIMITS 500m No CPU limit for the container CD_MEM_LIMITS 2000Mi No Memory limit for the container CD_EPHEMERAL_STORAGE_LIMITS 5Gi No Ephemeral storage limit for the container CD_CPU_REQUESTS 500m No CPU request for the container CD_MEM_REQUESTS 2000Mi No Memory request for the container CD_EPHEMERAL_STORAGE_REQUESTS 3Gi No Ephemeral storage request for the container","title":"cd_deploy"},{"location":"roles/cd_deploy/#role-cd_deploy","text":"Deploy Connect:direct","title":"Role cd_deploy"},{"location":"roles/cd_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY - Yes Entitlement registry key CD_NAMESPACE sterling-cdnode01-dev No Namespace for C:D application CD_NODENAME CDNODE01 No Specify the nodename of C:D CD_VERSION 6.3.0.3_ifix003 No Version of C:D container to deploy CD_ADMINPASSWORD passw0rd No Password for C:D Admin CD_APPUSER_PWD passw0rd No Password for C:D User CD_LOCALCERTPASSPHRASE changeit No Passphrase for local certificate CD_KEYSTOREPASSWORD changeit No Password for keystore CD_LICENSE_TYPE non-prod No License type for C:D (prod or non-prod) CD_STORAGE_CLASS - No Storage class to be used for the container CD_STORAGE_CAPACITY 1Gi No Storage capacity to be allocated to the container CD_CPU_LIMITS 500m No CPU limit for the container CD_MEM_LIMITS 2000Mi No Memory limit for the container CD_EPHEMERAL_STORAGE_LIMITS 5Gi No Ephemeral storage limit for the container CD_CPU_REQUESTS 500m No CPU request for the container CD_MEM_REQUESTS 2000Mi No Memory request for the container CD_EPHEMERAL_STORAGE_REQUESTS 3Gi No Ephemeral storage request for the container","title":"Role Variables"},{"location":"roles/cdws_deploy/","text":"Role cdws_deploy \uf0c1 Deploy Connect:direct Webservices Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key CDWS_NAMESPACE sterling-cdws01 Yes Namespace for C:D application CDWS_VERSION 6.3.0.8_ifix000 No Version of C:D container to deploy CDWS_TRUSTSTOREPASSWORD changeit No Password for truststore CDWS_KEYSTOREPASSWORD changeit No Password for keystore CDWS_CACERT_PASSWORD passw0rd No Password for CA certificate CDWS_LICENSE_TYPE non-prod No License type for C:D application (prod or non-prod) CDWS_STORAGE_CLASS - Yes Storage class to be used for the container CDWS_STORAGE_CAPACITY 500Mi No Storage capacity to be allocated to the container CDWS_CPU_LIMITS 3000m No CPU limit for the container CDWS_MEM_LIMITS 2Gi No Memory limit for the container CDWS_CPU_REQUESTS 1500m No CPU request for the container CDWS_MEM_REQUESTS 1Gi No Memory request for the container","title":"cdws_deploy"},{"location":"roles/cdws_deploy/#role-cdws_deploy","text":"Deploy Connect:direct Webservices","title":"Role cdws_deploy"},{"location":"roles/cdws_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key CDWS_NAMESPACE sterling-cdws01 Yes Namespace for C:D application CDWS_VERSION 6.3.0.8_ifix000 No Version of C:D container to deploy CDWS_TRUSTSTOREPASSWORD changeit No Password for truststore CDWS_KEYSTOREPASSWORD changeit No Password for keystore CDWS_CACERT_PASSWORD passw0rd No Password for CA certificate CDWS_LICENSE_TYPE non-prod No License type for C:D application (prod or non-prod) CDWS_STORAGE_CLASS - Yes Storage class to be used for the container CDWS_STORAGE_CAPACITY 500Mi No Storage capacity to be allocated to the container CDWS_CPU_LIMITS 3000m No CPU limit for the container CDWS_MEM_LIMITS 2Gi No Memory limit for the container CDWS_CPU_REQUESTS 1500m No CPU request for the container CDWS_MEM_REQUESTS 1Gi No Memory request for the container","title":"Role Variables"},{"location":"roles/cert_manager/","text":"cert_manager \uf0c1 Deploy Red Hat Certificate Manager Operator into the target OCP cluster. Tip DO NOT USE 'Community Certificate Manager', STILL NOT WORKING Red Hat Certificate Manager Operatos will be installed into the cert-manager-operator namespace and the Operand will be created in the cert-manager namespace. Community Certificate Manager Operatos will be installed into the cert-manager-community-operator namespace and the Operand will be created in the cert-manager-community namespace. Prerequisites \uf0c1 Red Hat Certificate Manager \uf0c1 You must have already installed the Red Hat Operators CatalogSource. Community Certificate Manager \uf0c1 You must have already installed the Community Operators CatalogSource. Role Variables \uf0c1 cert_manager_action \uf0c1 Inform the role whether to perform an install or an uninstall the Certificate Manager service, action can also be set to none to instruct the role to take no action. Optional Environment Variable: CERT_MANAGER_ACTION Default: install cert_manager_provider \uf0c1 Choose which flavour of Certificate Manager to install; Red Hat ( redhat ) or Community ( community ) Optional Environment Variable: CERT_MANAGER_PROVIDER Default: community Note: Certificate Manager is a cluster-wide dependency, therefore be really careful when uninstalling it as this might be used by several applications and dependencies installed in the cluster. Example Playbook \uf0c1 After installing the Ansible Collection you can include this role in your own custom playbooks. Red Hat Certificate Manager \uf0c1 - hosts: localhost vars: - cert_manager_action: install - cert_manager_provider: redhat roles: - cert_manager Community Certificate Manager \uf0c1 - hosts: localhost vars: - cert_manager_action: install - cert_manager_provider: community roles: - cert_manager License \uf0c1 EPL-2.0","title":"cert_manager"},{"location":"roles/cert_manager/#cert_manager","text":"Deploy Red Hat Certificate Manager Operator into the target OCP cluster. Tip DO NOT USE 'Community Certificate Manager', STILL NOT WORKING Red Hat Certificate Manager Operatos will be installed into the cert-manager-operator namespace and the Operand will be created in the cert-manager namespace. Community Certificate Manager Operatos will be installed into the cert-manager-community-operator namespace and the Operand will be created in the cert-manager-community namespace.","title":"cert_manager"},{"location":"roles/cert_manager/#prerequisites","text":"","title":"Prerequisites"},{"location":"roles/cert_manager/#red-hat-certificate-manager","text":"You must have already installed the Red Hat Operators CatalogSource.","title":"Red Hat Certificate Manager"},{"location":"roles/cert_manager/#community-certificate-manager","text":"You must have already installed the Community Operators CatalogSource.","title":"Community Certificate Manager"},{"location":"roles/cert_manager/#role-variables","text":"","title":"Role Variables"},{"location":"roles/cert_manager/#cert_manager_action","text":"Inform the role whether to perform an install or an uninstall the Certificate Manager service, action can also be set to none to instruct the role to take no action. Optional Environment Variable: CERT_MANAGER_ACTION Default: install","title":"cert_manager_action"},{"location":"roles/cert_manager/#cert_manager_provider","text":"Choose which flavour of Certificate Manager to install; Red Hat ( redhat ) or Community ( community ) Optional Environment Variable: CERT_MANAGER_PROVIDER Default: community Note: Certificate Manager is a cluster-wide dependency, therefore be really careful when uninstalling it as this might be used by several applications and dependencies installed in the cluster.","title":"cert_manager_provider"},{"location":"roles/cert_manager/#example-playbook","text":"After installing the Ansible Collection you can include this role in your own custom playbooks.","title":"Example Playbook"},{"location":"roles/cert_manager/#red-hat-certificate-manager_1","text":"- hosts: localhost vars: - cert_manager_action: install - cert_manager_provider: redhat roles: - cert_manager","title":"Red Hat Certificate Manager"},{"location":"roles/cert_manager/#community-certificate-manager_1","text":"- hosts: localhost vars: - cert_manager_action: install - cert_manager_provider: community roles: - cert_manager","title":"Community Certificate Manager"},{"location":"roles/cert_manager/#license","text":"EPL-2.0","title":"License"},{"location":"roles/cloudbeaver/","text":"Role cloudbeaver \uf0c1 Deploy Cloudbeaver to manage databases inside containers Role Variables \uf0c1 Environment Variable Default Value Required Description CB_NAMESPACE cloudbeaver No Namespace for CloudBeaver CB_ADMIN cbadmin No Admin username for CloudBeaver CB_PASSWORD passw0rd No Admin password for CloudBeaver","title":"cloudbeaver"},{"location":"roles/cloudbeaver/#role-cloudbeaver","text":"Deploy Cloudbeaver to manage databases inside containers","title":"Role cloudbeaver"},{"location":"roles/cloudbeaver/#role-variables","text":"Environment Variable Default Value Required Description CB_NAMESPACE cloudbeaver No Namespace for CloudBeaver CB_ADMIN cbadmin No Admin username for CloudBeaver CB_PASSWORD passw0rd No Admin password for CloudBeaver","title":"Role Variables"},{"location":"roles/db2_console/","text":"Role cloudbeaver \uf0c1 Deploy DB2 console to manage databases inside containers Role Variables \uf0c1","title":"Role cloudbeaver"},{"location":"roles/db2_console/#role-cloudbeaver","text":"Deploy DB2 console to manage databases inside containers","title":"Role cloudbeaver"},{"location":"roles/db2_console/#role-variables","text":"","title":"Role Variables"},{"location":"roles/itx_rs_deploy/","text":"Role itx_rs_deploy \uf0c1 Deploy DB2 for ITX RS application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITX_RS_NAMESPACE N/A Yes Namespace for ITX application ITX_RS_INSTANCEID N/A Yes Instance ID for ITX application ITX_RS_VERSION 10.1.2.0.20231130 No Version of ITX application ITX_RS_SYS_PASSPHRASE Passw0rd@ No System passphrase for ITX application","title":"itx_rs_deploy"},{"location":"roles/itx_rs_deploy/#role-itx_rs_deploy","text":"Deploy DB2 for ITX RS application","title":"Role itx_rs_deploy"},{"location":"roles/itx_rs_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITX_RS_NAMESPACE N/A Yes Namespace for ITX application ITX_RS_INSTANCEID N/A Yes Instance ID for ITX application ITX_RS_VERSION 10.1.2.0.20231130 No Version of ITX application ITX_RS_SYS_PASSPHRASE Passw0rd@ No System passphrase for ITX application","title":"Role Variables"},{"location":"roles/itxa_deploy/","text":"Role itxa_deploy \uf0c1 Deploy ITXA application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application ITXA_VERSION 10.0.1.9-x86_64 No Version of ITXA application ITXA_ADMIN_PASSWORD passw0rd No Admin password for ITXA application ITXA_TLS_KEYSTORE_PASSWORD changeit No TLS keystore password for ITXA application ITXA_LICENSETYPE non-prod No License type for ITXA application (prod or non-prod)","title":"itxa_deploy"},{"location":"roles/itxa_deploy/#role-itxa_deploy","text":"Deploy ITXA application","title":"Role itxa_deploy"},{"location":"roles/itxa_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application ITXA_VERSION 10.0.1.9-x86_64 No Version of ITXA application ITXA_ADMIN_PASSWORD passw0rd No Admin password for ITXA application ITXA_TLS_KEYSTORE_PASSWORD changeit No TLS keystore password for ITXA application ITXA_LICENSETYPE non-prod No License type for ITXA application (prod or non-prod)","title":"Role Variables"},{"location":"roles/itxa_deploy_db2/","text":"Role itxa_deploy_db2 \uf0c1 Deploy DB2 for ITXA application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"itxa_deploy_db2"},{"location":"roles/itxa_deploy_db2/#role-itxa_deploy_db2","text":"Deploy DB2 for ITXA application","title":"Role itxa_deploy_db2"},{"location":"roles/itxa_deploy_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"Role Variables"},{"location":"roles/itxa_setup_db2/","text":"itxa_setup_db2 \uf0c1 This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the ITXA. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'. Role itxa_setup_db2 \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application","title":"itxa_setup_db2"},{"location":"roles/itxa_setup_db2/#itxa_setup_db2","text":"This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the ITXA. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.","title":"itxa_setup_db2"},{"location":"roles/itxa_setup_db2/#role-itxa_setup_db2","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application","title":"Role itxa_setup_db2"},{"location":"roles/kafka/","text":"kafka \uf0c1 Many parts of this role was based from kafka role from ibm-mas project. Thanks David Parker (@durera) This role provides support to install a Kafka Cluster using Strimzi , Red Hat AMQ Streams and generate configuration that can be directly applied to IBM Sterling. Both Strimzi and Red Hat AMQ streams component are massively scalable, distributed, and high-performance data streaming platform based on the Apache Kafka project. Both offer a distributed backbone that allows microservices and other applications to share data with high throughput and low latency. As more applications move to Kubernetes and Red Hat OpenShift, it is increasingly important to be able to run the communication infrastructure on the same platform. Red Hat OpenShift, as a highly scalable platform, is a natural fit for messaging technologies such as Kafka. The AMQ streams component makes running and managing Apache Kafka OpenShift native through the use of powerful operators that simplify the deployment, configuration, management, and use of Apache Kafka on Red Hat OpenShift. The AMQ streams component is part of the Red Hat AMQ family, which also includes the AMQ broker, a longtime innovation leader in Java\u2122 Message Service (JMS) and polyglot messaging, as well as the AMQ interconnect router, a wide-area, peer-to-peer messaging solution. Under the covers, AMQ streams leverages Strimzi's architecture, resources and configurations. Note: The SB2BI license does not include entitlement for AMQ streams. The SB2BI Devops Collection supports this Kafka deployment as an example only. Therefore, we recommend the use of Strimzi for an opensource Kafka provider. Tip The role will generate a yaml file containing the definition of a Secret and KafkaCfg resource that can be used to configure the deployed cluster as the SB2BI system Kafka. This file can be directly applied using oc apply -f $SI_CONFIG_DIR/kafkacfg-amqstreams-system.yaml or used in conjunction with the role. Role Variables \uf0c1 kafka_provider \uf0c1 Valid kafka providers are strimzi (opensource), redhat (installs AMQ Streams which requires a license that is not included with Sterling B2BI entitlement) - Environment Variable: KAFKA_PROVIDER - Default Value: strimzi Red Hat AMQ Streams & Strimzi Role Variables \uf0c1 kafka_version \uf0c1 The version of Kafka to deploy by the operator. Before changing the kafka_version make the version is supported by the amq-streams operator version or strimzi operator version . Environment Variable: KAFKA_VERSION Default Value: 3.5.0 for AMQ Streams and 3.7.0 for Strimzi. kafka_namespace \uf0c1 The namespace where the operator and Kafka cluster will be deployed. Environment Variable: KAFKA_NAMESPACE Default Value: amq-streams for AMQ Streams and strimzi for Strimzi. kafka_cluster_name \uf0c1 The name of the Kafka cluster that will be created Environment Variable: KAFKA_CLUSTER_NAME Default Value: sterling-kfk kafka_cluster_size \uf0c1 The configuration to apply, there are two configurations available: small and large. Environment Variable: KAFKA_CLUSTER_SIZE Default Value: small kafka_storage_class \uf0c1 The name of the storage class to configure the AMQStreams operator to use for persistent storage in the Kafka cluster. Environment Variable: KAFKA_STORAGE_CLASS Default Value: lookup supported storage classes in the cluster kafka_storage_size \uf0c1 The size of the storage to configure the AMQStreams operator to use for persistent storage in the Kafka cluster. Environment Variable: KAFKA_STORAGE_SIZE Default Value: 100Gi zookeeper_storage_class \uf0c1 The name of the storage class to configure the AMQStreams operator to use for persistent storage in the Zookeeper cluster. Environment Variable: ZOOKEEPER_STORAGE_CLASS Default Value: lookup supported storage classes in the cluster zookeeper_storage_size \uf0c1 The size of the storage to configure the AMQStreams operator to use for persistent storage in the Zookeeper cluster. Environment Variable: ZOOKEEPER_STORAGE_SIZE Default Value: 10Gi kafka_user_name \uf0c1 The name of the user to setup in the cluster for SB2BI. Environment Variable: KAFKA_USER_NAME Default Value: masuser kafka_user_password (supported in Strimzi operator verion 0.25.0 - amq streams operator version 2.x) \uf0c1 The password of the user to setup in the cluster for SB2BI. Environment Variable: KAFKA_USER_PASSWORD Default Value: a randomly generated password is used if one is not specified si_instance_id \uf0c1 The instance ID of Maximo Application Suite that the KafkaCfg configuration will target. If this or si_config_dir are not set then the role will not generate a KafkaCfg template. Environment Variable: SI_INSTANCE_ID Default Value: None si_config_dir \uf0c1 Local directory to save the generated KafkaCfg resource definition. This can be used to manually configure a SB2BI instance to connect to the Kafka cluster, or used as an input to the role. If this or si_instance_id are not set then the role will not generate a KafkaCfg template. Environment Variable: SI_CONFIG_DIR Default Value: None custom_labels \uf0c1 List of comma separated key=value pairs for setting custom labels on instance specific resources. Optional Environment Variable: CUSTOM_LABELS Default Value: None si_instance_id \uf0c1 The instance ID of Maximo Application Suite that the KafkaCfg configuration will target. If this or si_config_dir are not set then the role will not generate a KafkaCfg template. Environment Variable: SI_INSTANCE_ID Default Value: None si_config_dir \uf0c1 Local directory to save the generated KafkaCfg resource definition. This can be used to manually configure a SB2BI instance to connect to the Kafka cluster, or used as an input to the role. If this or si_instance_id are not set then the role will not generate a KafkaCfg template. Environment Variable: SI_CONFIG_DIR Default Value: None custom_labels \uf0c1 List of comma separated key=value pairs for setting custom labels on instance specific resources. Optional Environment Variable: CUSTOM_LABELS Default Value: None Example Playbook \uf0c1 - hosts: localhost any_errors_fatal: true vars: # Generate a KafkaCfg template si_instance_id: masinst1 si_config_dir: ~/masconfig roles: - kafka License \uf0c1 EPL-2.0","title":"kafka"},{"location":"roles/kafka/#kafka","text":"Many parts of this role was based from kafka role from ibm-mas project. Thanks David Parker (@durera) This role provides support to install a Kafka Cluster using Strimzi , Red Hat AMQ Streams and generate configuration that can be directly applied to IBM Sterling. Both Strimzi and Red Hat AMQ streams component are massively scalable, distributed, and high-performance data streaming platform based on the Apache Kafka project. Both offer a distributed backbone that allows microservices and other applications to share data with high throughput and low latency. As more applications move to Kubernetes and Red Hat OpenShift, it is increasingly important to be able to run the communication infrastructure on the same platform. Red Hat OpenShift, as a highly scalable platform, is a natural fit for messaging technologies such as Kafka. The AMQ streams component makes running and managing Apache Kafka OpenShift native through the use of powerful operators that simplify the deployment, configuration, management, and use of Apache Kafka on Red Hat OpenShift. The AMQ streams component is part of the Red Hat AMQ family, which also includes the AMQ broker, a longtime innovation leader in Java\u2122 Message Service (JMS) and polyglot messaging, as well as the AMQ interconnect router, a wide-area, peer-to-peer messaging solution. Under the covers, AMQ streams leverages Strimzi's architecture, resources and configurations. Note: The SB2BI license does not include entitlement for AMQ streams. The SB2BI Devops Collection supports this Kafka deployment as an example only. Therefore, we recommend the use of Strimzi for an opensource Kafka provider. Tip The role will generate a yaml file containing the definition of a Secret and KafkaCfg resource that can be used to configure the deployed cluster as the SB2BI system Kafka. This file can be directly applied using oc apply -f $SI_CONFIG_DIR/kafkacfg-amqstreams-system.yaml or used in conjunction with the role.","title":"kafka"},{"location":"roles/kafka/#role-variables","text":"","title":"Role Variables"},{"location":"roles/kafka/#kafka_provider","text":"Valid kafka providers are strimzi (opensource), redhat (installs AMQ Streams which requires a license that is not included with Sterling B2BI entitlement) - Environment Variable: KAFKA_PROVIDER - Default Value: strimzi","title":"kafka_provider"},{"location":"roles/kafka/#red-hat-amq-streams-strimzi-role-variables","text":"","title":"Red Hat AMQ Streams &amp; Strimzi Role Variables"},{"location":"roles/kafka/#kafka_version","text":"The version of Kafka to deploy by the operator. Before changing the kafka_version make the version is supported by the amq-streams operator version or strimzi operator version . Environment Variable: KAFKA_VERSION Default Value: 3.5.0 for AMQ Streams and 3.7.0 for Strimzi.","title":"kafka_version"},{"location":"roles/kafka/#kafka_namespace","text":"The namespace where the operator and Kafka cluster will be deployed. Environment Variable: KAFKA_NAMESPACE Default Value: amq-streams for AMQ Streams and strimzi for Strimzi.","title":"kafka_namespace"},{"location":"roles/kafka/#kafka_cluster_name","text":"The name of the Kafka cluster that will be created Environment Variable: KAFKA_CLUSTER_NAME Default Value: sterling-kfk","title":"kafka_cluster_name"},{"location":"roles/kafka/#kafka_cluster_size","text":"The configuration to apply, there are two configurations available: small and large. Environment Variable: KAFKA_CLUSTER_SIZE Default Value: small","title":"kafka_cluster_size"},{"location":"roles/kafka/#kafka_storage_class","text":"The name of the storage class to configure the AMQStreams operator to use for persistent storage in the Kafka cluster. Environment Variable: KAFKA_STORAGE_CLASS Default Value: lookup supported storage classes in the cluster","title":"kafka_storage_class"},{"location":"roles/kafka/#kafka_storage_size","text":"The size of the storage to configure the AMQStreams operator to use for persistent storage in the Kafka cluster. Environment Variable: KAFKA_STORAGE_SIZE Default Value: 100Gi","title":"kafka_storage_size"},{"location":"roles/kafka/#zookeeper_storage_class","text":"The name of the storage class to configure the AMQStreams operator to use for persistent storage in the Zookeeper cluster. Environment Variable: ZOOKEEPER_STORAGE_CLASS Default Value: lookup supported storage classes in the cluster","title":"zookeeper_storage_class"},{"location":"roles/kafka/#zookeeper_storage_size","text":"The size of the storage to configure the AMQStreams operator to use for persistent storage in the Zookeeper cluster. Environment Variable: ZOOKEEPER_STORAGE_SIZE Default Value: 10Gi","title":"zookeeper_storage_size"},{"location":"roles/kafka/#kafka_user_name","text":"The name of the user to setup in the cluster for SB2BI. Environment Variable: KAFKA_USER_NAME Default Value: masuser","title":"kafka_user_name"},{"location":"roles/kafka/#kafka_user_password-supported-in-strimzi-operator-verion-0250-amq-streams-operator-version-2x","text":"The password of the user to setup in the cluster for SB2BI. Environment Variable: KAFKA_USER_PASSWORD Default Value: a randomly generated password is used if one is not specified","title":"kafka_user_password (supported in Strimzi operator verion 0.25.0 - amq streams operator version 2.x)"},{"location":"roles/kafka/#si_instance_id","text":"The instance ID of Maximo Application Suite that the KafkaCfg configuration will target. If this or si_config_dir are not set then the role will not generate a KafkaCfg template. Environment Variable: SI_INSTANCE_ID Default Value: None","title":"si_instance_id"},{"location":"roles/kafka/#si_config_dir","text":"Local directory to save the generated KafkaCfg resource definition. This can be used to manually configure a SB2BI instance to connect to the Kafka cluster, or used as an input to the role. If this or si_instance_id are not set then the role will not generate a KafkaCfg template. Environment Variable: SI_CONFIG_DIR Default Value: None","title":"si_config_dir"},{"location":"roles/kafka/#custom_labels","text":"List of comma separated key=value pairs for setting custom labels on instance specific resources. Optional Environment Variable: CUSTOM_LABELS Default Value: None","title":"custom_labels"},{"location":"roles/kafka/#si_instance_id_1","text":"The instance ID of Maximo Application Suite that the KafkaCfg configuration will target. If this or si_config_dir are not set then the role will not generate a KafkaCfg template. Environment Variable: SI_INSTANCE_ID Default Value: None","title":"si_instance_id"},{"location":"roles/kafka/#si_config_dir_1","text":"Local directory to save the generated KafkaCfg resource definition. This can be used to manually configure a SB2BI instance to connect to the Kafka cluster, or used as an input to the role. If this or si_instance_id are not set then the role will not generate a KafkaCfg template. Environment Variable: SI_CONFIG_DIR Default Value: None","title":"si_config_dir"},{"location":"roles/kafka/#custom_labels_1","text":"List of comma separated key=value pairs for setting custom labels on instance specific resources. Optional Environment Variable: CUSTOM_LABELS Default Value: None","title":"custom_labels"},{"location":"roles/kafka/#example-playbook","text":"- hosts: localhost any_errors_fatal: true vars: # Generate a KafkaCfg template si_instance_id: masinst1 si_config_dir: ~/masconfig roles: - kafka","title":"Example Playbook"},{"location":"roles/kafka/#license","text":"EPL-2.0","title":"License"},{"location":"roles/kowl/","text":"Role kowl \uf0c1 Deploy Kowl to inspect Kafka Role Variables \uf0c1 Environment Variable Default Value Required Description KAFKA_NAMESPACE sterling-kafka-strimzi Yes Namespace for Kafka KOWL_NAMESPACE sterling-phpldapadmin Yes Namespace for Kowl KAFKA_USER_NAME siuser No User","title":"kowl"},{"location":"roles/kowl/#role-kowl","text":"Deploy Kowl to inspect Kafka","title":"Role kowl"},{"location":"roles/kowl/#role-variables","text":"Environment Variable Default Value Required Description KAFKA_NAMESPACE sterling-kafka-strimzi Yes Namespace for Kafka KOWL_NAMESPACE sterling-phpldapadmin Yes Namespace for Kowl KAFKA_USER_NAME siuser No User","title":"Role Variables"},{"location":"roles/minio/","text":"minio \uf0c1 Deploy Minio S3 storage Role Variables \uf0c1 Environment Variable Default Value Required Description MINIO_PROVIDER standard No Currently supported providers: standard MINIO_ACTION install No Currently supported action: install MINIO_NAMESPACE sterling-minio No Namespace for MinIO MINIO_ROOT_USER root No Root user for MinIO MINIO_ROOT_PASSWORD passw0rd No Root password for MinIO MINIO_STORAGE_SIZE 10Gi No Storage size for MinIO Currently supported providers is only standard. Minio provider is in development.","title":"minio"},{"location":"roles/minio/#minio","text":"Deploy Minio S3 storage","title":"minio"},{"location":"roles/minio/#role-variables","text":"Environment Variable Default Value Required Description MINIO_PROVIDER standard No Currently supported providers: standard MINIO_ACTION install No Currently supported action: install MINIO_NAMESPACE sterling-minio No Namespace for MinIO MINIO_ROOT_USER root No Root user for MinIO MINIO_ROOT_PASSWORD passw0rd No Root password for MinIO MINIO_STORAGE_SIZE 10Gi No Storage size for MinIO Currently supported providers is only standard. Minio provider is in development.","title":"Role Variables"},{"location":"roles/openldap/","text":"OpenLDAP \uf0c1 Deploy OpenLDAP as container Role Variables \uf0c1 Environment Variable Default Value Required Description OPENLDAP_NAMESPACE sterling-openldap No Namespace for OpenLDAP OPENLDAP_BASE_DN dc=company,dc=com No Base DN for OpenLDAP OPENLDAP_ADMIN_PASSW0RD passw0rd No Admin password for OpenLDAP OPENLDAP_BIND_PASSW0RD passw0rd No Bind password for OpenLDAP OPENLDAP_UNIVERSAL_PASSW0RD passw0rd No Universal password for OpenLDAP","title":"openldap"},{"location":"roles/openldap/#openldap","text":"Deploy OpenLDAP as container","title":"OpenLDAP"},{"location":"roles/openldap/#role-variables","text":"Environment Variable Default Value Required Description OPENLDAP_NAMESPACE sterling-openldap No Namespace for OpenLDAP OPENLDAP_BASE_DN dc=company,dc=com No Base DN for OpenLDAP OPENLDAP_ADMIN_PASSW0RD passw0rd No Admin password for OpenLDAP OPENLDAP_BIND_PASSW0RD passw0rd No Bind password for OpenLDAP OPENLDAP_UNIVERSAL_PASSW0RD passw0rd No Universal password for OpenLDAP","title":"Role Variables"},{"location":"roles/pem_deploy_db2/","text":"Role pem_deploy_db2 \uf0c1 Deploy DB2 for PEM application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key PEM_INSTANCEID N/A Yes Instance ID for PEM application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"pem_deploy_db2"},{"location":"roles/pem_deploy_db2/#role-pem_deploy_db2","text":"Deploy DB2 for PEM application","title":"Role pem_deploy_db2"},{"location":"roles/pem_deploy_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key PEM_INSTANCEID N/A Yes Instance ID for PEM application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"Role Variables"},{"location":"roles/pem_deploy_mq/","text":"Role pem_deploy_mq \uf0c1 Deploy MQ for PEM application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key PEM_INSTANCEID N/A Yes Instance ID for PEM application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"pem_deploy_mq"},{"location":"roles/pem_deploy_mq/#role-pem_deploy_mq","text":"Deploy MQ for PEM application","title":"Role pem_deploy_mq"},{"location":"roles/pem_deploy_mq/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key PEM_INSTANCEID N/A Yes Instance ID for PEM application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"Role Variables"},{"location":"roles/phpldapadmin/","text":"Role phpldapadmin \uf0c1 Deploy phpLdapAdmin to manage OpenLDAP Role Variables \uf0c1 Environment Variable Default Value Required Description OPENLDAP_NAMESPACE sterling-openldap No Namespace for OpenLDAP PHPLDAPADMIN_NAMESPACE sterling-phpldapadmin No Namespace for phpLdapAdmin OPENLDAP_ADMIN_PASSWORD passw0rd No Admin password for OpenLDAP","title":"phpldapadmin"},{"location":"roles/phpldapadmin/#role-phpldapadmin","text":"Deploy phpLdapAdmin to manage OpenLDAP","title":"Role phpldapadmin"},{"location":"roles/phpldapadmin/#role-variables","text":"Environment Variable Default Value Required Description OPENLDAP_NAMESPACE sterling-openldap No Namespace for OpenLDAP PHPLDAPADMIN_NAMESPACE sterling-phpldapadmin No Namespace for phpLdapAdmin OPENLDAP_ADMIN_PASSWORD passw0rd No Admin password for OpenLDAP","title":"Role Variables"},{"location":"roles/sb2bi_deploy/","text":"Role sb2b_deploy \uf0c1 Deploy Sterling B2B Integrator Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY Yes IBM Entitled Registry key SI_INSTANCEID Yes Used to define your environment SI_LICENSETYPE no-prod No Specify the license edition as per license agreement. Valid value is prod or non-prod for Production and Non-production respectively. Remember that this parameter is crucial for IBM Licensing and Metering Service SI_SYSTEM_PASSPHRASE passw0rd No Name of system passphrase secret if available SI_ADMIN_MAILADDR admin@company.com No Provide the admin email address SI_ADMIN_SMTPHOST smtp.company.com No Provide the SMTP host details SI_DBVENDOR DB2 No Database vendor: DB2, Oracle, MSSQL SI_DBHOST No Database hostname/ip address SI_DBPORT No Database port SI_DBNAME B2BI No Database name SI_DBUSER db2inst1 No Database user SI_DBPASSWORD passw0rd No Database user password SI_ORACLESERVICENAME false No Oracle service name, must be true when database is Oracle SI_DATASETUP_ENABLED true No Enable database setup job execution SI_DATASETUP_UPGRADE false No Upgrade an older release SI_JMS_USERNAME No JMS Queue user SI_JMS_PASSWORD passw0rd No JMS Queue user password SI_JMS_KEYSTORE_PASSWORD No JMS Queue keystore password SI_JMS_TRUSTSTORE_PASSWORD No JMS Queue truststore password SI_LIBERTY_KEYSTORE_PASSWORD changeit No Liberty keystore password SI_SKIP_HELM false No Avoid to run helm, only generate values.yaml","title":"sb2bi_deploy"},{"location":"roles/sb2bi_deploy/#role-sb2b_deploy","text":"Deploy Sterling B2B Integrator","title":"Role sb2b_deploy"},{"location":"roles/sb2bi_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY Yes IBM Entitled Registry key SI_INSTANCEID Yes Used to define your environment SI_LICENSETYPE no-prod No Specify the license edition as per license agreement. Valid value is prod or non-prod for Production and Non-production respectively. Remember that this parameter is crucial for IBM Licensing and Metering Service SI_SYSTEM_PASSPHRASE passw0rd No Name of system passphrase secret if available SI_ADMIN_MAILADDR admin@company.com No Provide the admin email address SI_ADMIN_SMTPHOST smtp.company.com No Provide the SMTP host details SI_DBVENDOR DB2 No Database vendor: DB2, Oracle, MSSQL SI_DBHOST No Database hostname/ip address SI_DBPORT No Database port SI_DBNAME B2BI No Database name SI_DBUSER db2inst1 No Database user SI_DBPASSWORD passw0rd No Database user password SI_ORACLESERVICENAME false No Oracle service name, must be true when database is Oracle SI_DATASETUP_ENABLED true No Enable database setup job execution SI_DATASETUP_UPGRADE false No Upgrade an older release SI_JMS_USERNAME No JMS Queue user SI_JMS_PASSWORD passw0rd No JMS Queue user password SI_JMS_KEYSTORE_PASSWORD No JMS Queue keystore password SI_JMS_TRUSTSTORE_PASSWORD No JMS Queue truststore password SI_LIBERTY_KEYSTORE_PASSWORD changeit No Liberty keystore password SI_SKIP_HELM false No Avoid to run helm, only generate values.yaml","title":"Role Variables"},{"location":"roles/sb2bi_deploy_db2/","text":"Role sb2bi_deploy_db2 \uf0c1 Deploy DB2 for Sterling B2B Integrator application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for Sterling B2B Integrator application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"sb2bi_deploy_db2"},{"location":"roles/sb2bi_deploy_db2/#role-sb2bi_deploy_db2","text":"Deploy DB2 for Sterling B2B Integrator application","title":"Role sb2bi_deploy_db2"},{"location":"roles/sb2bi_deploy_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for Sterling B2B Integrator application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"Role Variables"},{"location":"roles/sb2bi_deploy_mq/","text":"Role sb2bi_deploy_mq \uf0c1 Deploy MQ for Sterling B2Bi application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2Bi application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"sb2bi_deploy_mq"},{"location":"roles/sb2bi_deploy_mq/#role-sb2bi_deploy_mq","text":"Deploy MQ for Sterling B2Bi application","title":"Role sb2bi_deploy_mq"},{"location":"roles/sb2bi_deploy_mq/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2Bi application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"Role Variables"},{"location":"roles/sb2bi_prebuiltdb_db2/","text":"Role sb2bi_prebuiltdb_db2 \uf0c1 This role will restore database from a previous instance. Only to be used for Proof of Concept (PoC). The role will copy a bash script (restoredb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, RESTORE DATABASE, ...'. Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2BI application SI_PREBUILTDB_FILE N/A Yes full path to backup file","title":"sb2bi_prebuiltdb_db2"},{"location":"roles/sb2bi_prebuiltdb_db2/#role-sb2bi_prebuiltdb_db2","text":"This role will restore database from a previous instance. Only to be used for Proof of Concept (PoC). The role will copy a bash script (restoredb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, RESTORE DATABASE, ...'.","title":"Role sb2bi_prebuiltdb_db2"},{"location":"roles/sb2bi_prebuiltdb_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2BI application SI_PREBUILTDB_FILE N/A Yes full path to backup file","title":"Role Variables"},{"location":"roles/sb2bi_setup_db2/","text":"Role sb2bi_setup_db2 \uf0c1 This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling B2B. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'. Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2BI application","title":"sb2bi_setup_db2"},{"location":"roles/sb2bi_setup_db2/#role-sb2bi_setup_db2","text":"This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling B2B. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.","title":"Role sb2bi_setup_db2"},{"location":"roles/sb2bi_setup_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2BI application","title":"Role Variables"},{"location":"roles/scc_deploy/","text":"Role scc_deploy \uf0c1 Deploy IBM Sterling Control Center application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for SCC application SCC_PRODUCTS '' Yes Products for SCC application (CCM,CCD; CCM; CCD) DB2_NAMESPACE N/A No Namespace for DB2 SCC_LICENSETYPE non-prod No License type for SCC application (prod or non-prod) SCC_SYSTEM_PASSPHRASE passw0rd No System passphrase for SCC application SCC_ADMIN admin No Admin username for SCC application SCC_ADMIN_PASSWORD passw0rd No Admin password for SCC application SCC_TRUSTSTORE_PASSWORD changeit No Truststore password for SCC application SCC_KEYSTORE_PASSWORD changeit No Keystore password for SCC application SCC_EMAIL_PASSWORD passw0rd No Email password for SCC application SCC_DBVENDOR N/A No Database vendor for SCC application SCC_DBHOST N/A No Database host for SCC application SCC_DBPORT N/A No Database port for SCC application SCC_DBNAME N/A No Database name for SCC application SCC_DBUSER N/A No Database user for SCC application SCC_DBPASSWORD N/A No Database password for SCC application SCC_SMTPHOST smtp.company.com No SMTP host for SCC application SCC_SMTPPORT 25 No SMTP port for SCC application SCC_EMAIL_RESPOND noreply@company.com No Email respond address for SCC application SCC_ADMIN_MAILADDR admin@company.com No Admin email address for SCC application SCC_SMTP_TLSENABLED false No SMTP TLS enabled for SCC application SCC_JMS_USERNAME N/A No JMS username for SCC application SCC_JMS_PASSWORD N/A No JMS password for SCC application SCC_JMS_KEYSTORE_PASSWORD N/A No JMS keystore password for SCC application SCC_JMS_TRUSTSTORE_PASSWORD N/A No JMS truststore password for SCC application SCC_TIMEZONE America/New_York No Timezone for SCC application","title":"scc_deploy"},{"location":"roles/scc_deploy/#role-scc_deploy","text":"Deploy IBM Sterling Control Center application","title":"Role scc_deploy"},{"location":"roles/scc_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for SCC application SCC_PRODUCTS '' Yes Products for SCC application (CCM,CCD; CCM; CCD) DB2_NAMESPACE N/A No Namespace for DB2 SCC_LICENSETYPE non-prod No License type for SCC application (prod or non-prod) SCC_SYSTEM_PASSPHRASE passw0rd No System passphrase for SCC application SCC_ADMIN admin No Admin username for SCC application SCC_ADMIN_PASSWORD passw0rd No Admin password for SCC application SCC_TRUSTSTORE_PASSWORD changeit No Truststore password for SCC application SCC_KEYSTORE_PASSWORD changeit No Keystore password for SCC application SCC_EMAIL_PASSWORD passw0rd No Email password for SCC application SCC_DBVENDOR N/A No Database vendor for SCC application SCC_DBHOST N/A No Database host for SCC application SCC_DBPORT N/A No Database port for SCC application SCC_DBNAME N/A No Database name for SCC application SCC_DBUSER N/A No Database user for SCC application SCC_DBPASSWORD N/A No Database password for SCC application SCC_SMTPHOST smtp.company.com No SMTP host for SCC application SCC_SMTPPORT 25 No SMTP port for SCC application SCC_EMAIL_RESPOND noreply@company.com No Email respond address for SCC application SCC_ADMIN_MAILADDR admin@company.com No Admin email address for SCC application SCC_SMTP_TLSENABLED false No SMTP TLS enabled for SCC application SCC_JMS_USERNAME N/A No JMS username for SCC application SCC_JMS_PASSWORD N/A No JMS password for SCC application SCC_JMS_KEYSTORE_PASSWORD N/A No JMS keystore password for SCC application SCC_JMS_TRUSTSTORE_PASSWORD N/A No JMS truststore password for SCC application SCC_TIMEZONE America/New_York No Timezone for SCC application","title":"Role Variables"},{"location":"roles/scc_deploy_db2/","text":"Role scc_deploy_db2 \uf0c1 Deploy DB2 for Sterling Control Center Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Sterling Control Center application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"scc_deploy_db2"},{"location":"roles/scc_deploy_db2/#role-scc_deploy_db2","text":"Deploy DB2 for Sterling Control Center","title":"Role scc_deploy_db2"},{"location":"roles/scc_deploy_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Sterling Control Center application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"Role Variables"},{"location":"roles/scc_deploy_mq/","text":"Role scc_deploy_mq \uf0c1 Deploy MQ for Sterling Control Center application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Control Center application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"scc_deploy_mq"},{"location":"roles/scc_deploy_mq/#role-scc_deploy_mq","text":"Deploy MQ for Sterling Control Center application","title":"Role scc_deploy_mq"},{"location":"roles/scc_deploy_mq/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Control Center application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"Role Variables"},{"location":"roles/scc_setup_db2/","text":"scc_setup_db2 \uf0c1 This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling Control Center Monitor/Director. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'. Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Control Center application","title":"scc_setup_db2"},{"location":"roles/scc_setup_db2/#scc_setup_db2","text":"This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling Control Center Monitor/Director. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.","title":"scc_setup_db2"},{"location":"roles/scc_setup_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Control Center application","title":"Role Variables"},{"location":"roles/seas_deploy/","text":"Role seas_deploy \uf0c1 Deploy Sterling External Authentication application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SEAS_NAMESPACE N/A Yes Namespace for SEAS application SEAS_VERSION 6.1.0.0.06 No Version of SEAS application SEAS_SYS_PASSPHRASE Passw0rd@ No System passphrase for SEAS application SEAS_ADMIN_PASSWORD Passw0rd@ No Admin password for SEAS application SEAS_KEYSTORE_PASSPHRASE Change1t@ No Keystore passphrase for SEAS application SEAS_TRUSTSTOREPASSWORD Change1t@ No Truststore passphrase for SEAS application SEAS_LICENSETYPE non-prod No License type for SEAS application (prod or non-prod)","title":"seas_deploy"},{"location":"roles/seas_deploy/#role-seas_deploy","text":"Deploy Sterling External Authentication application","title":"Role seas_deploy"},{"location":"roles/seas_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SEAS_NAMESPACE N/A Yes Namespace for SEAS application SEAS_VERSION 6.1.0.0.06 No Version of SEAS application SEAS_SYS_PASSPHRASE Passw0rd@ No System passphrase for SEAS application SEAS_ADMIN_PASSWORD Passw0rd@ No Admin password for SEAS application SEAS_KEYSTORE_PASSPHRASE Change1t@ No Keystore passphrase for SEAS application SEAS_TRUSTSTOREPASSWORD Change1t@ No Truststore passphrase for SEAS application SEAS_LICENSETYPE non-prod No License type for SEAS application (prod or non-prod)","title":"Role Variables"},{"location":"roles/ssp_cm_deploy/","text":"Role ssp_cm_deploy \uf0c1 Deploy Sterling Secure Proxy Configuration Manager application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP CM application SSP_VERSION 6.1.0.0.03plus No Version of SSP CM application SSP_LICENSE_TYPE non-prod No License type for SSP CM application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP CM application SSP_ADMIN_PASSWORD Passw0rd@ No Admin password for SSP CM application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP CM SSP_COMMONCERT_PASSWORD Passw0rd@ No Password for common certificate SSP_ENGCERT_PASSWORD Passw0rd@ No Password for engine certificate SSP_CMCLIENTCERT_PASSWORD Passw0rd@ No Password for CM client certificate SSP_CMCERT_PASSWORD Passw0rd@ No Password for CM certificate SSP_CMSERVERCERT_PASSWORD Passw0rd@ No Password for CM server certificate SSP_WEBCERT_PASSWORD Passw0rd@ No Password for web certificate SSP_EXPORTEDCERT_PASSWORD Passw0rd@ No Password for exported certificate","title":"ssp_cm_deploy"},{"location":"roles/ssp_cm_deploy/#role-ssp_cm_deploy","text":"Deploy Sterling Secure Proxy Configuration Manager application","title":"Role ssp_cm_deploy"},{"location":"roles/ssp_cm_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP CM application SSP_VERSION 6.1.0.0.03plus No Version of SSP CM application SSP_LICENSE_TYPE non-prod No License type for SSP CM application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP CM application SSP_ADMIN_PASSWORD Passw0rd@ No Admin password for SSP CM application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP CM SSP_COMMONCERT_PASSWORD Passw0rd@ No Password for common certificate SSP_ENGCERT_PASSWORD Passw0rd@ No Password for engine certificate SSP_CMCLIENTCERT_PASSWORD Passw0rd@ No Password for CM client certificate SSP_CMCERT_PASSWORD Passw0rd@ No Password for CM certificate SSP_CMSERVERCERT_PASSWORD Passw0rd@ No Password for CM server certificate SSP_WEBCERT_PASSWORD Passw0rd@ No Password for web certificate SSP_EXPORTEDCERT_PASSWORD Passw0rd@ No Password for exported certificate","title":"Role Variables"},{"location":"roles/ssp_config/","text":"Role ssp_config \uf0c1 Configure Sterling Secure Proxy Server application using REST API Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description SSP_INSTANCEID N/A Yes Instance ID for SSP CM application SSP_ADMIN_PASSWORD Passw0rd@ No Admin password for SSP CM application","title":"ssp_config"},{"location":"roles/ssp_config/#role-ssp_config","text":"Configure Sterling Secure Proxy Server application using REST API","title":"Role ssp_config"},{"location":"roles/ssp_config/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description SSP_INSTANCEID N/A Yes Instance ID for SSP CM application SSP_ADMIN_PASSWORD Passw0rd@ No Admin password for SSP CM application","title":"Role Variables"},{"location":"roles/ssp_deploy/","text":"Role ssp_deploy \uf0c1 Deploy Sterling Secure Proxy Engine application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSE_TYPE non-prod No License type for SSP application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP application SSP_TIMEZONE America/New_York No Timezone for SSP application","title":"ssp_deploy"},{"location":"roles/ssp_deploy/#role-ssp_deploy","text":"Deploy Sterling Secure Proxy Engine application","title":"Role ssp_deploy"},{"location":"roles/ssp_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSE_TYPE non-prod No License type for SSP application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP application SSP_TIMEZONE America/New_York No Timezone for SSP application","title":"Role Variables"},{"location":"roles/ssp_ps_deploy/","text":"Role ssp_ps_deploy \uf0c1 Deploy Sterling Secure Proxy Perimeter Server application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSETYPE non-prod No License type for SSP application (prod or non-prod)","title":"ssp_ps_deploy"},{"location":"roles/ssp_ps_deploy/#role-ssp_ps_deploy","text":"Deploy Sterling Secure Proxy Perimeter Server application","title":"Role ssp_ps_deploy"},{"location":"roles/ssp_ps_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSETYPE non-prod No License type for SSP application (prod or non-prod)","title":"Role Variables"}]}