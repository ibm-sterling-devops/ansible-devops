{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IBM Sterling Devops Ansible \uf0c1 IBM Sterling Devops Project is an open source project to deploy IBM Sterling Products and other resources directly from the command line. Developed in Ansible, it provides a collection of playbooks and roles that automated deploy for IBM Sterling B2Bi, IBM Connect:Direct, ... on Redhat OpenShift. Current playbooks: Install Sterling Products (standalone) Install Connect:Direct (standalone) Install Sterling B2B Integrator (standalone) Deploy Sterling Products on Redhat OpenShift / Kubernetes Deploy IBM Sterling Connect:Direct Deploy IBM Sterling Connect:Direct Web Service Deploy IBM Sterling Transformation Server Deploy IBM Sterling Transformation Extender Advanced Deploy IBM Sterling B2B Integrator Deploy IBM Sterling Control Center Director/Monitor Deploy IBM Sterling External Authentication Server Deploy IBM Sterling Proxy Server on Redhat OpenShift (Engine, Configuration Manager, Perimeter) Contributors See the list of contributors who participated in this project. License This project is licensed under the Eclipse Public License - v 2.0 - see the LICENSE file for details Disclaimer This repository is a community-driven projects and is not officially supported or endorsed by IBM. While members of the community may include IBM employees, this project is independent of IBM's official support channels. Please note that any contributions, issues, or inquiries regarding this repository should be directed to the community maintainers and not to IBM's support teams. We appreciate your understanding and participation in this community-driven initiative. This code can be used as is. And any feedback will be welcome. We does not make any warranty about the completeness, reliability and accuracy of this code. Any action you take by using this code is strictly at your own risk, and this project will not be liable for any losses and damages in connection with the use of this code.","title":"Home"},{"location":"#ibm-sterling-devops-ansible","text":"IBM Sterling Devops Project is an open source project to deploy IBM Sterling Products and other resources directly from the command line. Developed in Ansible, it provides a collection of playbooks and roles that automated deploy for IBM Sterling B2Bi, IBM Connect:Direct, ... on Redhat OpenShift. Current playbooks: Install Sterling Products (standalone) Install Connect:Direct (standalone) Install Sterling B2B Integrator (standalone) Deploy Sterling Products on Redhat OpenShift / Kubernetes Deploy IBM Sterling Connect:Direct Deploy IBM Sterling Connect:Direct Web Service Deploy IBM Sterling Transformation Server Deploy IBM Sterling Transformation Extender Advanced Deploy IBM Sterling B2B Integrator Deploy IBM Sterling Control Center Director/Monitor Deploy IBM Sterling External Authentication Server Deploy IBM Sterling Proxy Server on Redhat OpenShift (Engine, Configuration Manager, Perimeter) Contributors See the list of contributors who participated in this project. License This project is licensed under the Eclipse Public License - v 2.0 - see the LICENSE file for details Disclaimer This repository is a community-driven projects and is not officially supported or endorsed by IBM. While members of the community may include IBM employees, this project is independent of IBM's official support channels. Please note that any contributions, issues, or inquiries regarding this repository should be directed to the community maintainers and not to IBM's support teams. We appreciate your understanding and participation in this community-driven initiative. This code can be used as is. And any feedback will be welcome. We does not make any warranty about the completeness, reliability and accuracy of this code. Any action you take by using this code is strictly at your own risk, and this project will not be liable for any losses and damages in connection with the use of this code.","title":"IBM Sterling Devops Ansible"},{"location":"requirements/","text":"Sure, here's the updated guide for installing kubectl , oc , git , and ansible on Linux using yum : Installation Guide for kubectl, oc, git, and ansible \uf0c1 Linux \uf0c1 Install kubectl \uf0c1 Download the latest release: curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" Make the kubectl binary executable: chmod +x ./kubectl Move the binary to your PATH: sudo mv ./kubectl /usr/local/bin/kubectl Test to ensure the version you installed is up-to-date: kubectl version --client Install oc \uf0c1 Download the latest release: curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\" Extract the tar file: tar -xzvf openshift-client-linux.tar.gz Move the binaries to your PATH: sudo mv oc kubectl /usr/local/bin/ Test to ensure the version you installed is up-to-date: oc version Install git \uf0c1 Install git: sudo yum update -y sudo yum install git -y Verify the installation: git --version Install ansible \uf0c1 Install the dependencies: sudo yum install epel-release -y sudo yum update -y Install Ansible: sudo yum install ansible -y Verify the installation: ansible --version macOS \uf0c1 Install kubectl \uf0c1 Install with Homebrew: brew install kubectl Test to ensure the version you installed is up-to-date: kubectl version --client Install oc \uf0c1 Install with Homebrew: brew install openshift-cli Test to ensure the version you installed is up-to-date: oc version Install git \uf0c1 Verify the installation: git --version Install ansible \uf0c1 Install Ansible with Homebrew: brew install ansible Verify the installation: ansible --version Windows (Using WSL) \uf0c1 Install WSL \uf0c1 Open PowerShell as Administrator and run: wsl --install Restart your computer if prompted. Install a Linux distribution from the Microsoft Store (e.g., Ubuntu). Set up WSL \uf0c1 Open your installed Linux distribution. Update the package list and install necessary packages: sudo apt-get update sudo apt-get upgrade -y Install kubectl \uf0c1 Download the latest release: curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" Make the kubectl binary executable: chmod +x ./kubectl Move the binary to your PATH: sudo mv ./kubectl /usr/local/bin/kubectl Test to ensure the version you installed is up-to-date: kubectl version --client Install oc \uf0c1 Download the latest release: curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\" Extract the tar file: tar -xzvf openshift-client-linux.tar.gz Move the binaries to your PATH: sudo mv oc kubectl /usr/local/bin/ Test to ensure the version you installed is up-to-date: oc version Install git \uf0c1 Install git: sudo apt-get update sudo apt-get install git -y Verify the installation: git --version Install ansible \uf0c1 Install the dependencies: sudo apt-get update sudo apt-get install software-properties-common -y Add the Ansible PPA: sudo add-apt-repository --yes --update ppa:ansible/ansible Install Ansible: sudo apt-get install ansible -y Verify the installation: ansible --version This guide now includes instructions for using yum to install kubectl , oc , git , and ansible on Linux.","title":"Requirements"},{"location":"requirements/#installation-guide-for-kubectl-oc-git-and-ansible","text":"","title":"Installation Guide for kubectl, oc, git, and ansible"},{"location":"requirements/#linux","text":"","title":"Linux"},{"location":"requirements/#install-kubectl","text":"Download the latest release: curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" Make the kubectl binary executable: chmod +x ./kubectl Move the binary to your PATH: sudo mv ./kubectl /usr/local/bin/kubectl Test to ensure the version you installed is up-to-date: kubectl version --client","title":"Install kubectl"},{"location":"requirements/#install-oc","text":"Download the latest release: curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\" Extract the tar file: tar -xzvf openshift-client-linux.tar.gz Move the binaries to your PATH: sudo mv oc kubectl /usr/local/bin/ Test to ensure the version you installed is up-to-date: oc version","title":"Install oc"},{"location":"requirements/#install-git","text":"Install git: sudo yum update -y sudo yum install git -y Verify the installation: git --version","title":"Install git"},{"location":"requirements/#install-ansible","text":"Install the dependencies: sudo yum install epel-release -y sudo yum update -y Install Ansible: sudo yum install ansible -y Verify the installation: ansible --version","title":"Install ansible"},{"location":"requirements/#macos","text":"","title":"macOS"},{"location":"requirements/#install-kubectl_1","text":"Install with Homebrew: brew install kubectl Test to ensure the version you installed is up-to-date: kubectl version --client","title":"Install kubectl"},{"location":"requirements/#install-oc_1","text":"Install with Homebrew: brew install openshift-cli Test to ensure the version you installed is up-to-date: oc version","title":"Install oc"},{"location":"requirements/#install-git_1","text":"Verify the installation: git --version","title":"Install git"},{"location":"requirements/#install-ansible_1","text":"Install Ansible with Homebrew: brew install ansible Verify the installation: ansible --version","title":"Install ansible"},{"location":"requirements/#windows-using-wsl","text":"","title":"Windows (Using WSL)"},{"location":"requirements/#install-wsl","text":"Open PowerShell as Administrator and run: wsl --install Restart your computer if prompted. Install a Linux distribution from the Microsoft Store (e.g., Ubuntu).","title":"Install WSL"},{"location":"requirements/#set-up-wsl","text":"Open your installed Linux distribution. Update the package list and install necessary packages: sudo apt-get update sudo apt-get upgrade -y","title":"Set up WSL"},{"location":"requirements/#install-kubectl_2","text":"Download the latest release: curl -LO \"https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" Make the kubectl binary executable: chmod +x ./kubectl Move the binary to your PATH: sudo mv ./kubectl /usr/local/bin/kubectl Test to ensure the version you installed is up-to-date: kubectl version --client","title":"Install kubectl"},{"location":"requirements/#install-oc_2","text":"Download the latest release: curl -LO \"https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz\" Extract the tar file: tar -xzvf openshift-client-linux.tar.gz Move the binaries to your PATH: sudo mv oc kubectl /usr/local/bin/ Test to ensure the version you installed is up-to-date: oc version","title":"Install oc"},{"location":"requirements/#install-git_2","text":"Install git: sudo apt-get update sudo apt-get install git -y Verify the installation: git --version","title":"Install git"},{"location":"requirements/#install-ansible_2","text":"Install the dependencies: sudo apt-get update sudo apt-get install software-properties-common -y Add the Ansible PPA: sudo add-apt-repository --yes --update ppa:ansible/ansible Install Ansible: sudo apt-get install ansible -y Verify the installation: ansible --version This guide now includes instructions for using yum to install kubectl , oc , git , and ansible on Linux.","title":"Install ansible"},{"location":"others/known_problems/","text":"Known problems \uf0c1 Connect:Direct Versions: 6.3.0.0_ifix016 and Helm Version: 1.3.1 \uf0c1 SPCLI> SPCG760E rc=8 CMS KeyStore open exception - Invalid KeyStore Format.. [2024/03/18 17:30:42.46 ] | [ERROR] | Failure in generating self-signed certificate with RC=8. Line no: 221 In IBM Cloud, the StorageClass of the ReadWriteOnce type, which is requested in the values.yaml of the Helm chart, is ibmc-block-gold . But when using this storageClass I had permission problems. When changing to the ibmc-file-gold and/or ibmc-file-gold-gid storageClass, I had no problems running C:D in Container, both storageClasses are of the ReadWriteMany type.","title":"Known Problems"},{"location":"others/known_problems/#known-problems","text":"","title":"Known problems"},{"location":"others/known_problems/#connectdirect-versions-6300_ifix016-and-helm-version-131","text":"SPCLI> SPCG760E rc=8 CMS KeyStore open exception - Invalid KeyStore Format.. [2024/03/18 17:30:42.46 ] | [ERROR] | Failure in generating self-signed certificate with RC=8. Line no: 221 In IBM Cloud, the StorageClass of the ReadWriteOnce type, which is requested in the values.yaml of the Helm chart, is ibmc-block-gold . But when using this storageClass I had permission problems. When changing to the ibmc-file-gold and/or ibmc-file-gold-gid storageClass, I had no problems running C:D in Container, both storageClasses are of the ReadWriteMany type.","title":"Connect:Direct Versions: 6.3.0.0_ifix016 and Helm Version: 1.3.1"},{"location":"playbooks/deploy_ocp_cd/","text":"Deploy IBM Sterling Connect:Direct on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export CD_NAMESPACE=sterling-cdnode01-dev export CD_NODENAME=CDNODE01 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_cd.yml","title":"Deploy IBM Connect:Direct 6.3.x"},{"location":"playbooks/deploy_ocp_cd/#deploy-ibm-sterling-connectdirect-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Connect:Direct on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_cd/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_cd/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_cd/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_cd/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export CD_NAMESPACE=sterling-cdnode01-dev export CD_NODENAME=CDNODE01","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_cd/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_cd.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_cdws/","text":"Deploy IBM Sterling Connect:Direct WebService on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export CDWS_NAMESPACE=sterling-cdws01 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_cdws.yml","title":"Deploy IBM Connect:Direct WebServices"},{"location":"playbooks/deploy_ocp_cdws/#deploy-ibm-sterling-connectdirect-webservice-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Connect:Direct WebService on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_cdws/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_cdws/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_cdws/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_cdws/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export CDWS_NAMESPACE=sterling-cdws01","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_cdws/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_cdws.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_itx_rs/","text":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export ITX_RS_NAMESPACE=ibm-itx-rs-dev01 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_itx_rs.yml","title":"Deploy IBM Sterling Transformation Server (ITX RS)"},{"location":"playbooks/deploy_ocp_itx_rs/#deploy-ibm-sterling-transformation-server-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_itx_rs/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_itx_rs/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_itx_rs/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_itx_rs/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export ITX_RS_NAMESPACE=ibm-itx-rs-dev01","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_itx_rs/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_itx_rs.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_itxa/","text":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export ITXA_INSTANCEID=dev09 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_itxa.yml","title":"Deploy IBM Sterling Transformation Advanced (ITXA)"},{"location":"playbooks/deploy_ocp_itxa/#deploy-ibm-sterling-transformation-server-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_itxa/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_itxa/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_itxa/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_itxa/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export ITXA_INSTANCEID=dev09","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_itxa/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_itxa.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_sb2b/","text":"Deploy IBM Sterling B2B Integrator on OpenShift using Ansible Scripts \uf0c1 Supported versions \uf0c1 Playbook will run the last version of Sterling B2Bi, but take care of Kubernetes/Openshift version is supported Sterling B2Bi (helm) Kubernetes OpenShift Helm 6.2.0.2 (3.0.4) >= 1.27 and <= 1.29 >= 4.14 and <= 4.15 >= 3.14.x 6.2.0.1 (3.0.1) >= 1.26 and <= 1.28 >= 4.13 and <= 4.14 >= 3.13.x 6.2.0.0 (3.0.0) >= 1.25 and <= 1.27 >= 4.12 and <= 4.13 >= 3.12.x Check with kubectl version Deploying Sterling B2B Integrator \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Change directory cd ansible-ibm-sterling Run playbook the playbook \uf0c1 1) First you need to provide SI_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SI_INSTANCEID=dev01 2) (Optional) change your version: We always run the last version of Sterling B2Bi, but you can choose to run a different version, based on your RH OpenShift version. export SI_VERSION=6.2.0.2 3) To run playbook the playbook ansible-playbook playbooks/deploy_sb2b.yml Deploy Sterling B2Bi using prebuilt db. \uf0c1 If your using SB2Bi for a prove of concept and get the environment provided in 10 minutes, i suggest to deploy using prebuilt db. ** You need to have a backup from a previous install, we cannot provide because of copyright **. 1) Define previous environment variables export ENTITLED_REGISTRY_KEY=<entitlement_key> export SI_INSTANCEID=dev01 2) Provide your Sterling B2BI database backup export SI_PREBUILTDB_FILE=/tmp/B2BI_6202.tar.gz 3) disable database setup and upgrade export SI_DATASETUP_ENABLED=false export SI_DATASETUP_UPGRADE=false 4) Run prebuilt playbook ansible-playbook playbooks/deploy_sb2b_prebuiltdb.yml Environment Variable \uf0c1 For all environment variables Role sb2bi_deploy","title":"Deploy IBM Sterling B2B Integrator"},{"location":"playbooks/deploy_ocp_sb2b/#deploy-ibm-sterling-b2b-integrator-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling B2B Integrator on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_sb2b/#supported-versions","text":"Playbook will run the last version of Sterling B2Bi, but take care of Kubernetes/Openshift version is supported Sterling B2Bi (helm) Kubernetes OpenShift Helm 6.2.0.2 (3.0.4) >= 1.27 and <= 1.29 >= 4.14 and <= 4.15 >= 3.14.x 6.2.0.1 (3.0.1) >= 1.26 and <= 1.28 >= 4.13 and <= 4.14 >= 3.13.x 6.2.0.0 (3.0.0) >= 1.25 and <= 1.27 >= 4.12 and <= 4.13 >= 3.12.x Check with kubectl version","title":"Supported versions"},{"location":"playbooks/deploy_ocp_sb2b/#deploying-sterling-b2b-integrator","text":"","title":"Deploying Sterling B2B Integrator"},{"location":"playbooks/deploy_ocp_sb2b/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_sb2b/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_sb2b/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Change directory cd ansible-ibm-sterling","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_sb2b/#run-playbook-the-playbook","text":"1) First you need to provide SI_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SI_INSTANCEID=dev01 2) (Optional) change your version: We always run the last version of Sterling B2Bi, but you can choose to run a different version, based on your RH OpenShift version. export SI_VERSION=6.2.0.2 3) To run playbook the playbook ansible-playbook playbooks/deploy_sb2b.yml","title":"Run playbook the playbook"},{"location":"playbooks/deploy_ocp_sb2b/#deploy-sterling-b2bi-using-prebuilt-db","text":"If your using SB2Bi for a prove of concept and get the environment provided in 10 minutes, i suggest to deploy using prebuilt db. ** You need to have a backup from a previous install, we cannot provide because of copyright **. 1) Define previous environment variables export ENTITLED_REGISTRY_KEY=<entitlement_key> export SI_INSTANCEID=dev01 2) Provide your Sterling B2BI database backup export SI_PREBUILTDB_FILE=/tmp/B2BI_6202.tar.gz 3) disable database setup and upgrade export SI_DATASETUP_ENABLED=false export SI_DATASETUP_UPGRADE=false 4) Run prebuilt playbook ansible-playbook playbooks/deploy_sb2b_prebuiltdb.yml","title":"Deploy Sterling B2Bi using prebuilt db."},{"location":"playbooks/deploy_ocp_sb2b/#environment-variable","text":"For all environment variables Role sb2bi_deploy","title":"Environment Variable"},{"location":"playbooks/deploy_ocp_scc/","text":"Deploy IBM Sterling Control Center on OpenShift using Ansible Scripts \uf0c1 Deploying \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export SCC_INSTANCEID=dev01 export SCC_PRODUCTS=CCM,CCD where SCC_PRODUCTS is the product that you want to install Product Description CCD Sterling Control Center Director CCM Sterling Control Center Monitor Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_scc.yml Advanced options \uf0c1","title":"Deploy IBM Sterling Control Center Monitor/Director (CCM/CCD)"},{"location":"playbooks/deploy_ocp_scc/#deploy-ibm-sterling-control-center-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Control Center on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_scc/#deploying","text":"","title":"Deploying"},{"location":"playbooks/deploy_ocp_scc/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_scc/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_scc/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_scc/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export SCC_INSTANCEID=dev01 export SCC_PRODUCTS=CCM,CCD where SCC_PRODUCTS is the product that you want to install Product Description CCD Sterling Control Center Director CCM Sterling Control Center Monitor","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_scc/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_scc.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_scc/#advanced-options","text":"","title":"Advanced options"},{"location":"playbooks/deploy_ocp_seas/","text":"Deploy IBM Sterling External Authentication Server on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export SEAS_NAMESPACE=sterling-seas-dev01 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_seas.yml","title":"Deploy IBM Sterling External Authentication Server (SEAS)"},{"location":"playbooks/deploy_ocp_seas/#deploy-ibm-sterling-external-authentication-server-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling External Authentication Server on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_seas/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_seas/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_seas/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_seas/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export SEAS_NAMESPACE=sterling-seas-dev01","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_seas/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_seas.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_ssp/","text":"Deploy IBM Sterling Secure Proxy on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export SSP_INSTANCEID=dev01 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/dev_ssp.yml","title":"Deploy IBM Sterling Secure Proxy Server (SSP)"},{"location":"playbooks/deploy_ocp_ssp/#deploy-ibm-sterling-secure-proxy-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Secure Proxy on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_ssp/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_ssp/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_ssp/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_ssp/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export SSP_INSTANCEID=dev01","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_ssp/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/dev_ssp.yml","title":"Run the Plabook"},{"location":"playbooks/setup_b2b/","text":"Getting start \uf0c1 Prerequisites \uf0c1 Download installation files: \uf0c1 Product Name PartNum Filename Description | IBM DB2 V11.5.x | | DB2S_11.5.4_MPML.tar.gz | IBM DB2 V11.5.4 Multi-platform Multi-language| | IBM Java SDK/JRE | M06M9ML | SB2BI_6.1.2_MP_ML_JDK.zip | IBM Sterling B2B Integrator V6.1.2 or IBM Sterling File Gateway V6.1.2 Java SDK/JRE Multiplatform| | IBM Sterling B2B Integrator | M06MCML | SB2BI_6.1.2_MP_ML.zip | IBM Sterling B2B Integrator V6.1.2 for Multiplatform Multilingual| | IBM Java Unrestricted Policy | | unrestrictedpolicyfiles.zip | | Install Nginx \uf0c1 First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp <files> /usr/share/nginx/html Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Create a inventory file \uf0c1 Copy from template cd ansible-ibm-sterling cp environments/sb2b-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like DB2 server, Sterling Integrator node name, ... Provide information for you nginx server Running playbooks \uf0c1 Install Sterling B2B (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-sb2b.yml","title":"Install IBM Sterling B2B Integrator 6.1.2"},{"location":"playbooks/setup_b2b/#getting-start","text":"","title":"Getting start"},{"location":"playbooks/setup_b2b/#prerequisites","text":"","title":"Prerequisites"},{"location":"playbooks/setup_b2b/#download-installation-files","text":"Product Name PartNum Filename Description | IBM DB2 V11.5.x | | DB2S_11.5.4_MPML.tar.gz | IBM DB2 V11.5.4 Multi-platform Multi-language| | IBM Java SDK/JRE | M06M9ML | SB2BI_6.1.2_MP_ML_JDK.zip | IBM Sterling B2B Integrator V6.1.2 or IBM Sterling File Gateway V6.1.2 Java SDK/JRE Multiplatform| | IBM Sterling B2B Integrator | M06MCML | SB2BI_6.1.2_MP_ML.zip | IBM Sterling B2B Integrator V6.1.2 for Multiplatform Multilingual| | IBM Java Unrestricted Policy | | unrestrictedpolicyfiles.zip | |","title":"Download installation files:"},{"location":"playbooks/setup_b2b/#install-nginx","text":"First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp <files> /usr/share/nginx/html","title":"Install Nginx"},{"location":"playbooks/setup_b2b/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/setup_b2b/#create-a-inventory-file","text":"Copy from template cd ansible-ibm-sterling cp environments/sb2b-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like DB2 server, Sterling Integrator node name, ... Provide information for you nginx server","title":"Create a inventory file"},{"location":"playbooks/setup_b2b/#running-playbooks","text":"Install Sterling B2B (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-sb2b.yml","title":"Running playbooks"},{"location":"playbooks/setup_cd/","text":"Getting start \uf0c1 Prerequisites \uf0c1 Download installation files: \uf0c1 Product Name PartNum Filename Description IBM Connect:Direct IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z IBM Connect:Direct 6.2.x Install Nginx \uf0c1 First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z /usr/share/nginx/html Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Create a inventory file \uf0c1 Copy from template cd ansible-ibm-sterling cp environments/cd-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like C:D node name and ip address. Provide information for you nginx server Running playbooks \uf0c1 Install Connect:Direct (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-cd.yml","title":"Install IBM Connect:Direct 6.2.x"},{"location":"playbooks/setup_cd/#getting-start","text":"","title":"Getting start"},{"location":"playbooks/setup_cd/#prerequisites","text":"","title":"Prerequisites"},{"location":"playbooks/setup_cd/#download-installation-files","text":"Product Name PartNum Filename Description IBM Connect:Direct IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z IBM Connect:Direct 6.2.x","title":"Download installation files:"},{"location":"playbooks/setup_cd/#install-nginx","text":"First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z /usr/share/nginx/html","title":"Install Nginx"},{"location":"playbooks/setup_cd/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/setup_cd/#create-a-inventory-file","text":"Copy from template cd ansible-ibm-sterling cp environments/cd-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like C:D node name and ip address. Provide information for you nginx server","title":"Create a inventory file"},{"location":"playbooks/setup_cd/#running-playbooks","text":"Install Connect:Direct (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-cd.yml","title":"Running playbooks"},{"location":"playbooks/tools_deploy_cloudbeaver/","text":"Deploy Cloudbeaver on OpenShift using Ansible Scripts \uf0c1 Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/tools/cloudbeaver.yml","title":"Deploy CloudBeaver CE to manage databases"},{"location":"playbooks/tools_deploy_cloudbeaver/#deploy-cloudbeaver-on-openshift-using-ansible-scripts","text":"","title":"Deploy Cloudbeaver on OpenShift using Ansible Scripts"},{"location":"playbooks/tools_deploy_cloudbeaver/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/tools_deploy_cloudbeaver/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/tools_deploy_cloudbeaver/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"Exporting variables"},{"location":"playbooks/tools_deploy_cloudbeaver/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/tools/cloudbeaver.yml","title":"Run the Plabook"},{"location":"playbooks/tools_deploy_minio/","text":"Deploy MinIO on OpenShift using Ansible Scripts \uf0c1 Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/tools/minio.yml","title":"Deploy MinIO S3 storage"},{"location":"playbooks/tools_deploy_minio/#deploy-minio-on-openshift-using-ansible-scripts","text":"","title":"Deploy MinIO on OpenShift using Ansible Scripts"},{"location":"playbooks/tools_deploy_minio/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/tools_deploy_minio/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/tools_deploy_minio/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"Exporting variables"},{"location":"playbooks/tools_deploy_minio/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/tools/minio.yml","title":"Run the Plabook"},{"location":"playbooks/tools_deploy_openldap/","text":"Deploy OpenLDAP on OpenShift using Ansible Scripts \uf0c1 Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/tools/openldap.yml","title":"Deploy OpenLDAP as LDAP Server"},{"location":"playbooks/tools_deploy_openldap/#deploy-openldap-on-openshift-using-ansible-scripts","text":"","title":"Deploy OpenLDAP on OpenShift using Ansible Scripts"},{"location":"playbooks/tools_deploy_openldap/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/tools_deploy_openldap/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/tools_deploy_openldap/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=./ansible.cfg","title":"Exporting variables"},{"location":"playbooks/tools_deploy_openldap/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/tools/openldap.yml","title":"Run the Plabook"},{"location":"roles/cd_deploy/","text":"Role cd_deploy \uf0c1 Deploy Connect:direct Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key CD_NAMESPACE sterling-cdnode01-dev Yes Namespace for C:D application CD_NODENAME CDNODE01 Yes Specify the nodename of C:D CD_VERSION 6.3.0.3_ifix003 No Version of C:D container to deploy CD_ADMINPASSWORD passw0rd No Password for C:D Admin CD_APPUSER_PWD passw0rd No Password for C:D User CD_LOCALCERTPASSPHRASE changeit No Passphrase for local certificate CD_KEYSTOREPASSWORD changeit No Password for keystore CD_LICENSETYPE non-prod No License type for C:D (prod or non-prod)","title":"cd_deploy"},{"location":"roles/cd_deploy/#role-cd_deploy","text":"Deploy Connect:direct","title":"Role cd_deploy"},{"location":"roles/cd_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key CD_NAMESPACE sterling-cdnode01-dev Yes Namespace for C:D application CD_NODENAME CDNODE01 Yes Specify the nodename of C:D CD_VERSION 6.3.0.3_ifix003 No Version of C:D container to deploy CD_ADMINPASSWORD passw0rd No Password for C:D Admin CD_APPUSER_PWD passw0rd No Password for C:D User CD_LOCALCERTPASSPHRASE changeit No Passphrase for local certificate CD_KEYSTOREPASSWORD changeit No Password for keystore CD_LICENSETYPE non-prod No License type for C:D (prod or non-prod)","title":"Role Variables"},{"location":"roles/cdws_deploy/","text":"Role cdws_deploy \uf0c1 Deploy Connect:direct Webservices Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key CDWS_NAMESPACE sterling-cdws01 Yes Namespace for C:D application CDWS_VERSION 6.3.0.8_ifix000 No Version of C:D container to deploy CDWS_TRUSTSTOREPASSWORD changeit No Password for truststore CDWS_KEYSTOREPASSWORD changeit No Password for keystore CDWS_CACERT_PASSWORD passw0rd No Password for CA certificate CDWS_LICENSETYPE non-prod No License type for C:D application (prod or non-prod)","title":"cdws_deploy"},{"location":"roles/cdws_deploy/#role-cdws_deploy","text":"Deploy Connect:direct Webservices","title":"Role cdws_deploy"},{"location":"roles/cdws_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key CDWS_NAMESPACE sterling-cdws01 Yes Namespace for C:D application CDWS_VERSION 6.3.0.8_ifix000 No Version of C:D container to deploy CDWS_TRUSTSTOREPASSWORD changeit No Password for truststore CDWS_KEYSTOREPASSWORD changeit No Password for keystore CDWS_CACERT_PASSWORD passw0rd No Password for CA certificate CDWS_LICENSETYPE non-prod No License type for C:D application (prod or non-prod)","title":"Role Variables"},{"location":"roles/cloudbeaver/","text":"Role cloudbeaver \uf0c1 Deploy Cloudbeaver to manage databases inside containers Role Variables \uf0c1 Environment Variable Default Value Required Description CB_NAMESPACE cloudbeaver No Namespace for CloudBeaver CB_ADMIN cbadmin No Admin username for CloudBeaver CB_PASSWORD passw0rd No Admin password for CloudBeaver","title":"cloudbeaver"},{"location":"roles/cloudbeaver/#role-cloudbeaver","text":"Deploy Cloudbeaver to manage databases inside containers","title":"Role cloudbeaver"},{"location":"roles/cloudbeaver/#role-variables","text":"Environment Variable Default Value Required Description CB_NAMESPACE cloudbeaver No Namespace for CloudBeaver CB_ADMIN cbadmin No Admin username for CloudBeaver CB_PASSWORD passw0rd No Admin password for CloudBeaver","title":"Role Variables"},{"location":"roles/db2_console/","text":"Role cloudbeaver \uf0c1 Deploy DB2 console to manage databases inside containers Role Variables \uf0c1","title":"Role cloudbeaver"},{"location":"roles/db2_console/#role-cloudbeaver","text":"Deploy DB2 console to manage databases inside containers","title":"Role cloudbeaver"},{"location":"roles/db2_console/#role-variables","text":"","title":"Role Variables"},{"location":"roles/itx_rs_deploy/","text":"Role itx_rs_deploy \uf0c1 Deploy DB2 for ITX RS application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITX_RS_NAMESPACE N/A Yes Namespace for ITX application ITX_RS_INSTANCEID N/A Yes Instance ID for ITX application ITX_RS_VERSION 10.1.2.0.20231130 No Version of ITX application ITX_RS_SYS_PASSPHRASE Passw0rd@ No System passphrase for ITX application","title":"itx_rs_deploy"},{"location":"roles/itx_rs_deploy/#role-itx_rs_deploy","text":"Deploy DB2 for ITX RS application","title":"Role itx_rs_deploy"},{"location":"roles/itx_rs_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITX_RS_NAMESPACE N/A Yes Namespace for ITX application ITX_RS_INSTANCEID N/A Yes Instance ID for ITX application ITX_RS_VERSION 10.1.2.0.20231130 No Version of ITX application ITX_RS_SYS_PASSPHRASE Passw0rd@ No System passphrase for ITX application","title":"Role Variables"},{"location":"roles/itxa_deploy/","text":"Role itxa_deploy \uf0c1 Deploy ITXA application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application ITXA_VERSION 10.0.1.9-x86_64 No Version of ITXA application ITXA_ADMIN_PASSWORD passw0rd No Admin password for ITXA application ITXA_TLS_KEYSTORE_PASSWORD changeit No TLS keystore password for ITXA application ITXA_LICENSETYPE non-prod No License type for ITXA application (prod or non-prod)","title":"itxa_deploy"},{"location":"roles/itxa_deploy/#role-itxa_deploy","text":"Deploy ITXA application","title":"Role itxa_deploy"},{"location":"roles/itxa_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application ITXA_VERSION 10.0.1.9-x86_64 No Version of ITXA application ITXA_ADMIN_PASSWORD passw0rd No Admin password for ITXA application ITXA_TLS_KEYSTORE_PASSWORD changeit No TLS keystore password for ITXA application ITXA_LICENSETYPE non-prod No License type for ITXA application (prod or non-prod)","title":"Role Variables"},{"location":"roles/itxa_deploy_db2/","text":"Role itxa_deploy_db2 \uf0c1 Deploy DB2 for ITXA application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"itxa_deploy_db2"},{"location":"roles/itxa_deploy_db2/#role-itxa_deploy_db2","text":"Deploy DB2 for ITXA application","title":"Role itxa_deploy_db2"},{"location":"roles/itxa_deploy_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"Role Variables"},{"location":"roles/itxa_setup_db2/","text":"itxa_setup_db2 \uf0c1 This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the ITXA. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'. Role itxa_setup_db2 \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application","title":"itxa_setup_db2"},{"location":"roles/itxa_setup_db2/#itxa_setup_db2","text":"This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the ITXA. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.","title":"itxa_setup_db2"},{"location":"roles/itxa_setup_db2/#role-itxa_setup_db2","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key ITXA_INSTANCEID N/A Yes Instance ID for ITXA application","title":"Role itxa_setup_db2"},{"location":"roles/minio/","text":"minio \uf0c1 Deploy Minio S3 storage Role Variables \uf0c1 Environment Variable Default Value Required Description MINIO_NAMESPACE sterling-minio No Namespace for MinIO MINIO_ROOT_USER root No Root user for MinIO MINIO_ROOT_PASSWORD passw0rd No Root password for MinIO MINIO_STORAGE_SIZE 100Mi No Storage size for MinIO","title":"minio"},{"location":"roles/minio/#minio","text":"Deploy Minio S3 storage","title":"minio"},{"location":"roles/minio/#role-variables","text":"Environment Variable Default Value Required Description MINIO_NAMESPACE sterling-minio No Namespace for MinIO MINIO_ROOT_USER root No Root user for MinIO MINIO_ROOT_PASSWORD passw0rd No Root password for MinIO MINIO_STORAGE_SIZE 100Mi No Storage size for MinIO","title":"Role Variables"},{"location":"roles/openldap/","text":"OpenLDAP \uf0c1 Deploy OpenLDAP as container Role Variables \uf0c1 Environment Variable Default Value Required Description OPENLDAP_NAMESPACE sterling-openldap No Namespace for OpenLDAP OPENLDAP_BASE_DN dc=company,dc=com No Base DN for OpenLDAP OPENLDAP_ADMIN_PASSW0RD passw0rd No Admin password for OpenLDAP OPENLDAP_BIND_PASSW0RD passw0rd No Bind password for OpenLDAP OPENLDAP_UNIVERSAL_PASSW0RD passw0rd No Universal password for OpenLDAP","title":"openldap"},{"location":"roles/openldap/#openldap","text":"Deploy OpenLDAP as container","title":"OpenLDAP"},{"location":"roles/openldap/#role-variables","text":"Environment Variable Default Value Required Description OPENLDAP_NAMESPACE sterling-openldap No Namespace for OpenLDAP OPENLDAP_BASE_DN dc=company,dc=com No Base DN for OpenLDAP OPENLDAP_ADMIN_PASSW0RD passw0rd No Admin password for OpenLDAP OPENLDAP_BIND_PASSW0RD passw0rd No Bind password for OpenLDAP OPENLDAP_UNIVERSAL_PASSW0RD passw0rd No Universal password for OpenLDAP","title":"Role Variables"},{"location":"roles/pem_deploy_db2/","text":"Role pem_deploy_db2 \uf0c1 Deploy DB2 for PEM application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key PEM_INSTANCEID N/A Yes Instance ID for PEM application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"pem_deploy_db2"},{"location":"roles/pem_deploy_db2/#role-pem_deploy_db2","text":"Deploy DB2 for PEM application","title":"Role pem_deploy_db2"},{"location":"roles/pem_deploy_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key PEM_INSTANCEID N/A Yes Instance ID for PEM application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"Role Variables"},{"location":"roles/pem_deploy_mq/","text":"Role pem_deploy_mq \uf0c1 Deploy MQ for PEM application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key PEM_INSTANCEID N/A Yes Instance ID for PEM application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"pem_deploy_mq"},{"location":"roles/pem_deploy_mq/#role-pem_deploy_mq","text":"Deploy MQ for PEM application","title":"Role pem_deploy_mq"},{"location":"roles/pem_deploy_mq/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key PEM_INSTANCEID N/A Yes Instance ID for PEM application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"Role Variables"},{"location":"roles/phpldapadmin/","text":"Role phpldapadmin \uf0c1 Deploy phpLdapAdmin to manage OpenLDAP Role Variables \uf0c1 Environment Variable Default Value Required Description OPENLDAP_NAMESPACE sterling-openldap No Namespace for OpenLDAP PHPLDAPADMIN_NAMESPACE sterling-phpldapadmin No Namespace for phpLdapAdmin OPENLDAP_ADMIN_PASSWORD passw0rd No Admin password for OpenLDAP","title":"phpldapadmin"},{"location":"roles/phpldapadmin/#role-phpldapadmin","text":"Deploy phpLdapAdmin to manage OpenLDAP","title":"Role phpldapadmin"},{"location":"roles/phpldapadmin/#role-variables","text":"Environment Variable Default Value Required Description OPENLDAP_NAMESPACE sterling-openldap No Namespace for OpenLDAP PHPLDAPADMIN_NAMESPACE sterling-phpldapadmin No Namespace for phpLdapAdmin OPENLDAP_ADMIN_PASSWORD passw0rd No Admin password for OpenLDAP","title":"Role Variables"},{"location":"roles/sb2bi_deploy/","text":"Role sb2b_deploy \uf0c1 Deploy Sterling B2B Integrator Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY Yes IBM Entitled Registry key SI_INSTANCEID Yes Used to define your environment SI_LICENSETYPE no-prod No Specify the license edition as per license agreement. Valid value is prod or non-prod for Production and Non-production respectively. Remember that this parameter is crucial for IBM Licensing and Metering Service SI_SYSTEM_PASSPHRASE passw0rd No Name of system passphrase secret if available SI_ADMIN_MAILADDR admin@company.com No Provide the admin email address SI_ADMIN_SMTPHOST smtp.company.com No Provide the SMTP host details SI_DBVENDOR DB2 No Database vendor: DB2, Oracle, MSSQL SI_DBHOST No Database hostname/ip address SI_DBPORT No Database port SI_DBNAME B2BI No Database name SI_DBUSER db2inst1 No Database user SI_DBPASSWORD passw0rd No Database user password SI_ORACLESERVICENAME false No Oracle service name, must be true when database is Oracle SI_DATASETUP_ENABLED true No Enable database setup job execution SI_DATASETUP_UPGRADE false No Upgrade an older release SI_JMS_USERNAME No JMS Queue user SI_JMS_PASSWORD passw0rd No JMS Queue user password SI_JMS_KEYSTORE_PASSWORD No JMS Queue keystore password SI_JMS_TRUSTSTORE_PASSWORD No JMS Queue truststore password SI_LIBERTY_KEYSTORE_PASSWORD changeit No Liberty keystore password SI_SKIP_HELM false No Avoid to run helm, only generate values.yaml","title":"sb2bi_deploy"},{"location":"roles/sb2bi_deploy/#role-sb2b_deploy","text":"Deploy Sterling B2B Integrator","title":"Role sb2b_deploy"},{"location":"roles/sb2bi_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY Yes IBM Entitled Registry key SI_INSTANCEID Yes Used to define your environment SI_LICENSETYPE no-prod No Specify the license edition as per license agreement. Valid value is prod or non-prod for Production and Non-production respectively. Remember that this parameter is crucial for IBM Licensing and Metering Service SI_SYSTEM_PASSPHRASE passw0rd No Name of system passphrase secret if available SI_ADMIN_MAILADDR admin@company.com No Provide the admin email address SI_ADMIN_SMTPHOST smtp.company.com No Provide the SMTP host details SI_DBVENDOR DB2 No Database vendor: DB2, Oracle, MSSQL SI_DBHOST No Database hostname/ip address SI_DBPORT No Database port SI_DBNAME B2BI No Database name SI_DBUSER db2inst1 No Database user SI_DBPASSWORD passw0rd No Database user password SI_ORACLESERVICENAME false No Oracle service name, must be true when database is Oracle SI_DATASETUP_ENABLED true No Enable database setup job execution SI_DATASETUP_UPGRADE false No Upgrade an older release SI_JMS_USERNAME No JMS Queue user SI_JMS_PASSWORD passw0rd No JMS Queue user password SI_JMS_KEYSTORE_PASSWORD No JMS Queue keystore password SI_JMS_TRUSTSTORE_PASSWORD No JMS Queue truststore password SI_LIBERTY_KEYSTORE_PASSWORD changeit No Liberty keystore password SI_SKIP_HELM false No Avoid to run helm, only generate values.yaml","title":"Role Variables"},{"location":"roles/sb2bi_deploy_db2/","text":"Role sb2bi_deploy_db2 \uf0c1 Deploy DB2 for Sterling B2B Integrator application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for Sterling B2B Integrator application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"sb2bi_deploy_db2"},{"location":"roles/sb2bi_deploy_db2/#role-sb2bi_deploy_db2","text":"Deploy DB2 for Sterling B2B Integrator application","title":"Role sb2bi_deploy_db2"},{"location":"roles/sb2bi_deploy_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for Sterling B2B Integrator application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"Role Variables"},{"location":"roles/sb2bi_deploy_mq/","text":"Role sb2bi_deploy_mq \uf0c1 Deploy MQ for Sterling B2Bi application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2Bi application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"sb2bi_deploy_mq"},{"location":"roles/sb2bi_deploy_mq/#role-sb2bi_deploy_mq","text":"Deploy MQ for Sterling B2Bi application","title":"Role sb2bi_deploy_mq"},{"location":"roles/sb2bi_deploy_mq/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2Bi application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"Role Variables"},{"location":"roles/sb2bi_prebuiltdb_db2/","text":"Role sb2bi_prebuiltdb_db2 \uf0c1 This role will restore database from a previous instance. Only to be used for Proof of Concept (PoC). The role will copy a bash script (restoredb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, RESTORE DATABASE, ...'. Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2BI application SI_PREBUILTDB_FILE N/A Yes full path to backup file","title":"sb2bi_prebuiltdb_db2"},{"location":"roles/sb2bi_prebuiltdb_db2/#role-sb2bi_prebuiltdb_db2","text":"This role will restore database from a previous instance. Only to be used for Proof of Concept (PoC). The role will copy a bash script (restoredb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, RESTORE DATABASE, ...'.","title":"Role sb2bi_prebuiltdb_db2"},{"location":"roles/sb2bi_prebuiltdb_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2BI application SI_PREBUILTDB_FILE N/A Yes full path to backup file","title":"Role Variables"},{"location":"roles/sb2bi_setup_db2/","text":"Role sb2bi_setup_db2 \uf0c1 This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling B2B. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'. Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2BI application","title":"sb2bi_setup_db2"},{"location":"roles/sb2bi_setup_db2/#role-sb2bi_setup_db2","text":"This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling B2B. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.","title":"Role sb2bi_setup_db2"},{"location":"roles/sb2bi_setup_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SI_INSTANCEID N/A Yes Instance ID for SB2BI application","title":"Role Variables"},{"location":"roles/scc_deploy/","text":"Role scc_deploy \uf0c1 Deploy IBM Sterling Control Center application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for SCC application SCC_PRODUCTS '' Yes Products for SCC application (CCM,CCD; CCM; CCD) DB2_NAMESPACE N/A No Namespace for DB2 SCC_LICENSETYPE non-prod No License type for SCC application (prod or non-prod) SCC_SYSTEM_PASSPHRASE passw0rd No System passphrase for SCC application SCC_ADMIN admin No Admin username for SCC application SCC_ADMIN_PASSWORD passw0rd No Admin password for SCC application SCC_TRUSTSTORE_PASSWORD changeit No Truststore password for SCC application SCC_KEYSTORE_PASSWORD changeit No Keystore password for SCC application SCC_EMAIL_PASSWORD passw0rd No Email password for SCC application SCC_DBVENDOR N/A No Database vendor for SCC application SCC_DBHOST N/A No Database host for SCC application SCC_DBPORT N/A No Database port for SCC application SCC_DBNAME N/A No Database name for SCC application SCC_DBUSER N/A No Database user for SCC application SCC_DBPASSWORD N/A No Database password for SCC application SCC_SMTPHOST smtp.company.com No SMTP host for SCC application SCC_SMTPPORT 25 No SMTP port for SCC application SCC_EMAIL_RESPOND noreply@company.com No Email respond address for SCC application SCC_ADMIN_MAILADDR admin@company.com No Admin email address for SCC application SCC_SMTP_TLSENABLED false No SMTP TLS enabled for SCC application SCC_JMS_USERNAME N/A No JMS username for SCC application SCC_JMS_PASSWORD N/A No JMS password for SCC application SCC_JMS_KEYSTORE_PASSWORD N/A No JMS keystore password for SCC application SCC_JMS_TRUSTSTORE_PASSWORD N/A No JMS truststore password for SCC application SCC_TIMEZONE America/New_York No Timezone for SCC application","title":"scc_deploy"},{"location":"roles/scc_deploy/#role-scc_deploy","text":"Deploy IBM Sterling Control Center application","title":"Role scc_deploy"},{"location":"roles/scc_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for SCC application SCC_PRODUCTS '' Yes Products for SCC application (CCM,CCD; CCM; CCD) DB2_NAMESPACE N/A No Namespace for DB2 SCC_LICENSETYPE non-prod No License type for SCC application (prod or non-prod) SCC_SYSTEM_PASSPHRASE passw0rd No System passphrase for SCC application SCC_ADMIN admin No Admin username for SCC application SCC_ADMIN_PASSWORD passw0rd No Admin password for SCC application SCC_TRUSTSTORE_PASSWORD changeit No Truststore password for SCC application SCC_KEYSTORE_PASSWORD changeit No Keystore password for SCC application SCC_EMAIL_PASSWORD passw0rd No Email password for SCC application SCC_DBVENDOR N/A No Database vendor for SCC application SCC_DBHOST N/A No Database host for SCC application SCC_DBPORT N/A No Database port for SCC application SCC_DBNAME N/A No Database name for SCC application SCC_DBUSER N/A No Database user for SCC application SCC_DBPASSWORD N/A No Database password for SCC application SCC_SMTPHOST smtp.company.com No SMTP host for SCC application SCC_SMTPPORT 25 No SMTP port for SCC application SCC_EMAIL_RESPOND noreply@company.com No Email respond address for SCC application SCC_ADMIN_MAILADDR admin@company.com No Admin email address for SCC application SCC_SMTP_TLSENABLED false No SMTP TLS enabled for SCC application SCC_JMS_USERNAME N/A No JMS username for SCC application SCC_JMS_PASSWORD N/A No JMS password for SCC application SCC_JMS_KEYSTORE_PASSWORD N/A No JMS keystore password for SCC application SCC_JMS_TRUSTSTORE_PASSWORD N/A No JMS truststore password for SCC application SCC_TIMEZONE America/New_York No Timezone for SCC application","title":"Role Variables"},{"location":"roles/scc_deploy_db2/","text":"Role scc_deploy_db2 \uf0c1 Deploy DB2 for Sterling Control Center Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Sterling Control Center application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"scc_deploy_db2"},{"location":"roles/scc_deploy_db2/#role-scc_deploy_db2","text":"Deploy DB2 for Sterling Control Center","title":"Role scc_deploy_db2"},{"location":"roles/scc_deploy_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Sterling Control Center application DB2_PASSWORD passw0rd No DB2 db2inst1 password DB2_VERSION 11.5.9.0 No DB2 Version","title":"Role Variables"},{"location":"roles/scc_deploy_mq/","text":"Role scc_deploy_mq \uf0c1 Deploy MQ for Sterling Control Center application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Control Center application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"scc_deploy_mq"},{"location":"roles/scc_deploy_mq/#role-scc_deploy_mq","text":"Deploy MQ for Sterling Control Center application","title":"Role scc_deploy_mq"},{"location":"roles/scc_deploy_mq/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Control Center application MQ_NAME mq No Name for MQ MQ_VERSION 9.2.5.0-r3 No Version of MQ MQ_ADMIN_PASSWORD passw0rd No Admin password for MQ MQ_APP_PASSWORD passw0rd No Application password for MQ","title":"Role Variables"},{"location":"roles/scc_setup_db2/","text":"scc_setup_db2 \uf0c1 This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling Control Center Monitor/Director. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'. Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Control Center application","title":"scc_setup_db2"},{"location":"roles/scc_setup_db2/#scc_setup_db2","text":"This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling Control Center Monitor/Director. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.","title":"scc_setup_db2"},{"location":"roles/scc_setup_db2/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SCC_INSTANCEID N/A Yes Instance ID for Control Center application","title":"Role Variables"},{"location":"roles/seas_deploy/","text":"Role seas_deploy \uf0c1 Deploy Sterling External Authentication application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SEAS_NAMESPACE N/A Yes Namespace for SEAS application SEAS_VERSION 6.1.0.0.06 No Version of SEAS application SEAS_SYS_PASSPHRASE Passw0rd@ No System passphrase for SEAS application SEAS_ADMIN_PASSWORD Passw0rd@ No Admin password for SEAS application SEAS_KEYSTORE_PASSPHRASE Change1t@ No Keystore passphrase for SEAS application SEAS_TRUSTSTOREPASSWORD Change1t@ No Truststore passphrase for SEAS application SEAS_LICENSETYPE non-prod No License type for SEAS application (prod or non-prod)","title":"seas_deploy"},{"location":"roles/seas_deploy/#role-seas_deploy","text":"Deploy Sterling External Authentication application","title":"Role seas_deploy"},{"location":"roles/seas_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SEAS_NAMESPACE N/A Yes Namespace for SEAS application SEAS_VERSION 6.1.0.0.06 No Version of SEAS application SEAS_SYS_PASSPHRASE Passw0rd@ No System passphrase for SEAS application SEAS_ADMIN_PASSWORD Passw0rd@ No Admin password for SEAS application SEAS_KEYSTORE_PASSPHRASE Change1t@ No Keystore passphrase for SEAS application SEAS_TRUSTSTOREPASSWORD Change1t@ No Truststore passphrase for SEAS application SEAS_LICENSETYPE non-prod No License type for SEAS application (prod or non-prod)","title":"Role Variables"},{"location":"roles/ssp_cm_deploy/","text":"Role ssp_cm_deploy \uf0c1 Deploy Sterling Secure Proxy Configuration Manager application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP CM application SSP_VERSION 6.1.0.0.03plus No Version of SSP CM application SSP_LICENSETYPE non-prod No License type for SSP CM application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP CM application SSP_ADMIN_PASSWORD Passw0rd@ No Admin password for SSP CM application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP CM SSP_COMMONCERT_PASSWORD Passw0rd@ No Password for common certificate SSP_ENGCERT_PASSWORD Passw0rd@ No Password for engine certificate SSP_CMCLIENTCERT_PASSWORD Passw0rd@ No Password for CM client certificate SSP_CMCERT_PASSWORD Passw0rd@ No Password for CM certificate SSP_CMSERVERCERT_PASSWORD Passw0rd@ No Password for CM server certificate SSP_WEBCERT_PASSWORD Passw0rd@ No Password for web certificate SSP_EXPORTEDCERT_PASSWORD Passw0rd@ No Password for exported certificate","title":"ssp_cm_deploy"},{"location":"roles/ssp_cm_deploy/#role-ssp_cm_deploy","text":"Deploy Sterling Secure Proxy Configuration Manager application","title":"Role ssp_cm_deploy"},{"location":"roles/ssp_cm_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP CM application SSP_VERSION 6.1.0.0.03plus No Version of SSP CM application SSP_LICENSETYPE non-prod No License type for SSP CM application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP CM application SSP_ADMIN_PASSWORD Passw0rd@ No Admin password for SSP CM application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP CM SSP_COMMONCERT_PASSWORD Passw0rd@ No Password for common certificate SSP_ENGCERT_PASSWORD Passw0rd@ No Password for engine certificate SSP_CMCLIENTCERT_PASSWORD Passw0rd@ No Password for CM client certificate SSP_CMCERT_PASSWORD Passw0rd@ No Password for CM certificate SSP_CMSERVERCERT_PASSWORD Passw0rd@ No Password for CM server certificate SSP_WEBCERT_PASSWORD Passw0rd@ No Password for web certificate SSP_EXPORTEDCERT_PASSWORD Passw0rd@ No Password for exported certificate","title":"Role Variables"},{"location":"roles/ssp_config/","text":"Role ssp_config \uf0c1 Configure Sterling Secure Proxy Server application using REST API Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description SSP_INSTANCEID N/A Yes Instance ID for SSP CM application SSP_ADMIN_PASSWORD Passw0rd@ No Admin password for SSP CM application","title":"ssp_config"},{"location":"roles/ssp_config/#role-ssp_config","text":"Configure Sterling Secure Proxy Server application using REST API","title":"Role ssp_config"},{"location":"roles/ssp_config/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description SSP_INSTANCEID N/A Yes Instance ID for SSP CM application SSP_ADMIN_PASSWORD Passw0rd@ No Admin password for SSP CM application","title":"Role Variables"},{"location":"roles/ssp_deploy/","text":"Role ssp_deploy \uf0c1 Deploy Sterling Secure Proxy Engine application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSETYPE non-prod No License type for SSP application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP application SSP_TIMEZONE America/New_York No Timezone for SSP application","title":"ssp_deploy"},{"location":"roles/ssp_deploy/#role-ssp_deploy","text":"Deploy Sterling Secure Proxy Engine application","title":"Role ssp_deploy"},{"location":"roles/ssp_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSETYPE non-prod No License type for SSP application (prod or non-prod) SSP_SYS_PASSPHRASE Passw0rd@ No System passphrase for SSP application SSP_KEYCERT_STORE_PASSPHRASE changeit No Keystore and certificate store passphrase SSP_KEYCERT_ENCRYPT_PASSPHRASE Change1t@ No Encryption passphrase for keys and certificates SSP_CUSTOM_KEYCERT_PASSPHRASE Change1t@ No Custom keystore passphrase for SSP application SSP_TIMEZONE America/New_York No Timezone for SSP application","title":"Role Variables"},{"location":"roles/ssp_ps_deploy/","text":"Role ssp_ps_deploy \uf0c1 Deploy Sterling Secure Proxy Perimeter Server application Role Variables \uf0c1 Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSETYPE non-prod No License type for SSP application (prod or non-prod)","title":"ssp_ps_deploy"},{"location":"roles/ssp_ps_deploy/#role-ssp_ps_deploy","text":"Deploy Sterling Secure Proxy Perimeter Server application","title":"Role ssp_ps_deploy"},{"location":"roles/ssp_ps_deploy/#role-variables","text":"Environment variables for this role: Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY N/A Yes Entitlement registry key SSP_INSTANCEID N/A Yes Instance ID for SSP application SSP_VERSION 6.1.0.0.03plus No Version of SSP application SSP_LICENSETYPE non-prod No License type for SSP application (prod or non-prod)","title":"Role Variables"}]}