{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IBM Sterling Devops Ansible \uf0c1 Ansible DevOps collection for IBM Sterling B2Bi, IBM Connect:Direct, Seas, ... Contributors \uf0c1 See the list of contributors who participated in this project. License \uf0c1 This project is licensed under the Eclipse Public License - v 2.0 - see the LICENSE.md file for details Disclaimer \uf0c1 This repository is a community-driven projects and is not officially supported or endorsed by IBM. While members of the community may include IBM employees, this project is independent of IBM's official support channels. Please note that any contributions, issues, or inquiries regarding this repository should be directed to the community maintainers and not to IBM's support teams. We appreciate your understanding and participation in this community-driven initiative. This code can be used as is. And any feedback will be welcome. We does not make any warranty about the completeness, reliability and accuracy of this code. Any action you take by using this code is strictly at your own risk, and this project will not be liable for any losses and damages in connection with the use of this code.","title":"Home"},{"location":"#ibm-sterling-devops-ansible","text":"Ansible DevOps collection for IBM Sterling B2Bi, IBM Connect:Direct, Seas, ...","title":"IBM Sterling Devops Ansible"},{"location":"#contributors","text":"See the list of contributors who participated in this project.","title":"Contributors"},{"location":"#license","text":"This project is licensed under the Eclipse Public License - v 2.0 - see the LICENSE.md file for details","title":"License"},{"location":"#disclaimer","text":"This repository is a community-driven projects and is not officially supported or endorsed by IBM. While members of the community may include IBM employees, this project is independent of IBM's official support channels. Please note that any contributions, issues, or inquiries regarding this repository should be directed to the community maintainers and not to IBM's support teams. We appreciate your understanding and participation in this community-driven initiative. This code can be used as is. And any feedback will be welcome. We does not make any warranty about the completeness, reliability and accuracy of this code. Any action you take by using this code is strictly at your own risk, and this project will not be liable for any losses and damages in connection with the use of this code.","title":"Disclaimer"},{"location":"LICENSE/","text":"Eclipse Public License - v 2.0 THE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC LICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT. DEFINITIONS \"Contribution\" means: a) in the case of the initial Contributor, the initial content Distributed under this Agreement, and b) in the case of each subsequent Contributor: i) changes to the Program, and ii) additions to the Program; where such changes and/or additions to the Program originate from and are Distributed by that particular Contributor. A Contribution \"originates\" from a Contributor if it was added to the Program by such Contributor itself or anyone acting on such Contributor's behalf. Contributions do not include changes or additions to the Program that are not Modified Works. \"Contributor\" means any person or entity that Distributes the Program. \"Licensed Patents\" mean patent claims licensable by a Contributor which are necessarily infringed by the use or sale of its Contribution alone or when combined with the Program. \"Program\" means the Contributions Distributed in accordance with this Agreement. \"Recipient\" means anyone who receives the Program under this Agreement or any Secondary License (as applicable), including Contributors. \"Derivative Works\" shall mean any work, whether in Source Code or other form, that is based on (or derived from) the Program and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. \"Modified Works\" shall mean any work in Source Code or other form that results from an addition to, deletion from, or modification of the contents of the Program, including, for purposes of clarity any new file in Source Code form that contains any contents of the Program. Modified Works shall not include works that contain only declarations, interfaces, types, classes, structures, or files of the Program solely in each case in order to link to, bind by name, or subclass the Program or Modified Works thereof. \"Distribute\" means the acts of a) distributing or b) making available in any manner that enables the transfer of a copy. \"Source Code\" means the form of a Program preferred for making modifications, including but not limited to software source code, documentation source, and configuration files. \"Secondary License\" means either the GNU General Public License, Version 2.0, or any later versions of that license, including any exceptions or additional permissions as identified by the initial Contributor. GRANT OF RIGHTS a) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, Distribute and sublicense the Contribution of such Contributor, if any, and such Derivative Works. b) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free patent license under Licensed Patents to make, use, sell, offer to sell, import and otherwise transfer the Contribution of such Contributor, if any, in Source Code or other form. This patent license shall apply to the combination of the Contribution and the Program if, at the time the Contribution is added by the Contributor, such addition of the Contribution causes such combination to be covered by the Licensed Patents. The patent license shall not apply to any other combinations which include the Contribution. No hardware per se is licensed hereunder. c) Recipient understands that although each Contributor grants the licenses to its Contributions set forth herein, no assurances are provided by any Contributor that the Program does not infringe the patent or other intellectual property rights of any other entity. Each Contributor disclaims any liability to Recipient for claims brought by any other entity based on infringement of intellectual property rights or otherwise. As a condition to exercising the rights and licenses granted hereunder, each Recipient hereby assumes sole responsibility to secure any other intellectual property rights needed, if any. For example, if a third party patent license is required to allow Recipient to Distribute the Program, it is Recipient's responsibility to acquire that license before distributing the Program. d) Each Contributor represents that to its knowledge it has sufficient copyright rights in its Contribution, if any, to grant the copyright license set forth in this Agreement. e) Notwithstanding the terms of any Secondary License, no Contributor makes additional grants to any Recipient (other than those set forth in this Agreement) as a result of such Recipient's receipt of the Program under the terms of a Secondary License (if permitted under the terms of Section 3). REQUIREMENTS 3.1 If a Contributor Distributes the Program in any form, then: a) the Program must also be made available as Source Code, in accordance with section 3.2, and the Contributor must accompany the Program with a statement that the Source Code for the Program is available under this Agreement, and informs Recipients how to obtain it in a reasonable manner on or through a medium customarily used for software exchange; and b) the Contributor may Distribute the Program under a license different than this Agreement, provided that such license: i) effectively disclaims on behalf of all other Contributors all warranties and conditions, express and implied, including warranties or conditions of title and non-infringement, and implied warranties or conditions of merchantability and fitness for a particular purpose; ii) effectively excludes on behalf of all other Contributors all liability for damages, including direct, indirect, special, incidental and consequential damages, such as lost profits; iii) does not attempt to limit or alter the recipients' rights in the Source Code under section 3.2; and iv) requires any subsequent distribution of the Program by any party to be under a license that satisfies the requirements of this section 3. 3.2 When the Program is Distributed as Source Code: a) it must be made available under this Agreement, or if the Program (i) is combined with other material in a separate file or files made available under a Secondary License, and (ii) the initial Contributor attached to the Source Code the notice described in Exhibit A of this Agreement, then the Program may be made available under the terms of such Secondary Licenses, and b) a copy of this Agreement must be included with each copy of the Program. 3.3 Contributors may not remove or alter any copyright, patent, trademark, attribution notices, disclaimers of warranty, or limitations of liability (\"notices\") contained within the Program from any copy of the Program which they Distribute, provided that Contributors may add their own appropriate notices. COMMERCIAL DISTRIBUTION Commercial distributors of software may accept certain responsibilities with respect to end users, business partners and the like. While this license is intended to facilitate the commercial use of the Program, the Contributor who includes the Program in a commercial product offering should do so in a manner which does not create potential liability for other Contributors. Therefore, if a Contributor includes the Program in a commercial product offering, such Contributor (\"Commercial Contributor\") hereby agrees to defend and indemnify every other Contributor (\"Indemnified Contributor\") against any losses, damages and costs (collectively \"Losses\") arising from claims, lawsuits and other legal actions brought by a third party against the Indemnified Contributor to the extent caused by the acts or omissions of such Commercial Contributor in connection with its distribution of the Program in a commercial product offering. The obligations in this section do not apply to any claims or Losses relating to any actual or alleged intellectual property infringement. In order to qualify, an Indemnified Contributor must: a) promptly notify the Commercial Contributor in writing of such claim, and b) allow the Commercial Contributor to control, and cooperate with the Commercial Contributor in, the defense and any related settlement negotiations. The Indemnified Contributor may participate in any such claim at its own expense. For example, a Contributor might include the Program in a commercial product offering, Product X. That Contributor is then a Commercial Contributor. If that Commercial Contributor then makes performance claims, or offers warranties related to Product X, those performance claims and warranties are such Commercial Contributor's responsibility alone. Under this section, the Commercial Contributor would have to defend claims against the other Contributors related to those performance claims and warranties, and if a court requires any other Contributor to pay any damages as a result, the Commercial Contributor must pay those damages. NO WARRANTY EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT PERMITTED BY APPLICABLE LAW, THE PROGRAM IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely responsible for determining the appropriateness of using and distributing the Program and assumes all risks associated with its exercise of rights under this Agreement, including but not limited to the risks and costs of program errors, compliance with applicable laws, damage to or loss of data, programs or equipment, and unavailability or interruption of operations. DISCLAIMER OF LIABILITY EXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, AND TO THE EXTENT PERMITTED BY APPLICABLE LAW, NEITHER RECIPIENT NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. GENERAL If any provision of this Agreement is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this Agreement, and without further action by the parties hereto, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable. If Recipient institutes patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Program itself (excluding combinations of the Program with other software or hardware) infringes such Recipient's patent(s), then such Recipient's rights granted under Section 2(b) shall terminate as of the date such litigation is filed. All Recipient's rights under this Agreement shall terminate if it fails to comply with any of the material terms or conditions of this Agreement and does not cure such failure in a reasonable period of time after becoming aware of such noncompliance. If all Recipient's rights under this Agreement terminate, Recipient agrees to cease use and distribution of the Program as soon as reasonably practicable. However, Recipient's obligations under this Agreement and any licenses granted by Recipient relating to the Program shall continue and survive. Everyone is permitted to copy and distribute copies of this Agreement, but in order to avoid inconsistency the Agreement is copyrighted and may only be modified in the following manner. The Agreement Steward reserves the right to publish new versions (including revisions) of this Agreement from time to time. No one other than the Agreement Steward has the right to modify this Agreement. The Eclipse Foundation is the initial Agreement Steward. The Eclipse Foundation may assign the responsibility to serve as the Agreement Steward to a suitable separate entity. Each new version of the Agreement will be given a distinguishing version number. The Program (including Contributions) may always be Distributed subject to the version of the Agreement under which it was received. In addition, after a new version of the Agreement is published, Contributor may elect to Distribute the Program (including its Contributions) under the new version. Except as expressly stated in Sections 2(a) and 2(b) above, Recipient receives no rights or licenses to the intellectual property of any Contributor under this Agreement, whether expressly, by implication, estoppel or otherwise. All rights in the Program not expressly granted under this Agreement are reserved. Nothing in this Agreement is intended to be enforceable by any entity that is not a Contributor or Recipient. No third-party beneficiary rights are created under this Agreement. Exhibit A - Form of Secondary Licenses Notice \"This Source Code may also be made available under the following Secondary Licenses when the conditions for such availability set forth in the Eclipse Public License, v. 2.0 are satisfied: {name license(s), version(s), and exceptions or additional permissions here}.\" Simply including a copy of this Agreement, including this Exhibit A is not sufficient to license the Source Code under Secondary Licenses. If it is not possible or desirable to put the notice in a particular file, then You may include the notice in a location (such as a LICENSE file in a relevant directory) where a recipient would be likely to look for such a notice. You may add additional accurate notices of copyright ownership.","title":"LICENSE"},{"location":"known_problems/","text":"Known problems \uf0c1 Connect:Direct Versions: 6.3.0.0_ifix016 and Helm Version: 1.3.1 \uf0c1 SPCLI> SPCG760E rc=8 CMS KeyStore open exception - Invalid KeyStore Format.. [2024/03/18 17:30:42.46 ] | [ERROR] | Failure in generating self-signed certificate with RC=8. Line no: 221 In IBM Cloud, the StorageClass of the ReadWriteOnce type, which is requested in the values.yaml of the Helm chart, is ibmc-block-gold . But when using this storageClass I had permission problems. When changing to the ibmc-file-gold and/or ibmc-file-gold-gid storageClass, I had no problems running C:D in Container, both storageClasses are of the ReadWriteMany type.","title":"Known Problems"},{"location":"known_problems/#known-problems","text":"","title":"Known problems"},{"location":"known_problems/#connectdirect-versions-6300_ifix016-and-helm-version-131","text":"SPCLI> SPCG760E rc=8 CMS KeyStore open exception - Invalid KeyStore Format.. [2024/03/18 17:30:42.46 ] | [ERROR] | Failure in generating self-signed certificate with RC=8. Line no: 221 In IBM Cloud, the StorageClass of the ReadWriteOnce type, which is requested in the values.yaml of the Helm chart, is ibmc-block-gold . But when using this storageClass I had permission problems. When changing to the ibmc-file-gold and/or ibmc-file-gold-gid storageClass, I had no problems running C:D in Container, both storageClasses are of the ReadWriteMany type.","title":"Connect:Direct Versions: 6.3.0.0_ifix016 and Helm Version: 1.3.1"},{"location":"requirements/","text":"IBM Sterling Devops Ansible \uf0c1 Ansible DevOps collection for IBM Sterling B2Bi, IBM Connect:Direct, Seas, ... Usage \uf0c1 Run a playbook \uf0c1 The collection includes a number of playbooks that string together multiple roles, you can directly invoke them after installing the collection: Deploying Sterling B2B Integrator \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Change directory cd ansible-ibm-sterling Run playbook the playbook \uf0c1 1) First you need to provide SI_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SI_INSTANCEID=dev01 2) Provide de url domain SI_DOMAIN export SI_DOMAIN=ocp01-8...74-0000.us-south.containers.appdomain.cloud You can get this information from your OpenShift console url: Environment Sample URL IBM Cloud ocp01-8...74-0000.us-south.containers.appdomain.cloud IBM Techzone apps.34...6e.cloud.techzone.ibm.com 3) (Optional) change your version: We always run the last version of Sterling B2Bi, but you can choose to run a different version, based on your RH OpenShift version. export SI_VERSION=6.2.0.2 4) To run playbook the playbook ansible-playbook playbooks/deploy_sb2b.yml Local Install for MacOS \uf0c1 Using Brew to install brew install python3 pip3 ansible Local Install for Linux \uf0c1 Install Python & Ansible \uf0c1 Python 3.9 is recommended as it is the most widely used version of Python within our development team, but any in-support 3.x version of Python should work fine. python3 --version python3 -m pip install ansible junit_xml xmljson jmespath kubernetes openshift ansible --version ansible-playbook --version Local Install for MS Windows \uf0c1 Support \uf0c1 This Ansible collection is developed by community, for any problem raise an issue directly in the GitHub repository .","title":"Requirements"},{"location":"requirements/#ibm-sterling-devops-ansible","text":"Ansible DevOps collection for IBM Sterling B2Bi, IBM Connect:Direct, Seas, ...","title":"IBM Sterling Devops Ansible"},{"location":"requirements/#usage","text":"","title":"Usage"},{"location":"requirements/#run-a-playbook","text":"The collection includes a number of playbooks that string together multiple roles, you can directly invoke them after installing the collection:","title":"Run a playbook"},{"location":"requirements/#deploying-sterling-b2b-integrator","text":"","title":"Deploying Sterling B2B Integrator"},{"location":"requirements/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"IBM Entitled Registry"},{"location":"requirements/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"requirements/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Change directory cd ansible-ibm-sterling","title":"Cloning ansible-ibm-websphere from git"},{"location":"requirements/#run-playbook-the-playbook","text":"1) First you need to provide SI_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SI_INSTANCEID=dev01 2) Provide de url domain SI_DOMAIN export SI_DOMAIN=ocp01-8...74-0000.us-south.containers.appdomain.cloud You can get this information from your OpenShift console url: Environment Sample URL IBM Cloud ocp01-8...74-0000.us-south.containers.appdomain.cloud IBM Techzone apps.34...6e.cloud.techzone.ibm.com 3) (Optional) change your version: We always run the last version of Sterling B2Bi, but you can choose to run a different version, based on your RH OpenShift version. export SI_VERSION=6.2.0.2 4) To run playbook the playbook ansible-playbook playbooks/deploy_sb2b.yml","title":"Run playbook the playbook"},{"location":"requirements/#local-install-for-macos","text":"Using Brew to install brew install python3 pip3 ansible","title":"Local Install for MacOS"},{"location":"requirements/#local-install-for-linux","text":"","title":"Local Install for Linux"},{"location":"requirements/#install-python-ansible","text":"Python 3.9 is recommended as it is the most widely used version of Python within our development team, but any in-support 3.x version of Python should work fine. python3 --version python3 -m pip install ansible junit_xml xmljson jmespath kubernetes openshift ansible --version ansible-playbook --version","title":"Install Python &amp; Ansible"},{"location":"requirements/#local-install-for-ms-windows","text":"","title":"Local Install for MS Windows"},{"location":"requirements/#support","text":"This Ansible collection is developed by community, for any problem raise an issue directly in the GitHub repository .","title":"Support"},{"location":"playbooks/deploy_ocp_cd/","text":"Deploy IBM Sterling Connect:Direct on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export CD_NAMESPACE=sterling-cdnode01-dev export CD_NODENAME=CDNODE01 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_cd.yml","title":"Deploy IBM Connect:Direct 6.3.x"},{"location":"playbooks/deploy_ocp_cd/#deploy-ibm-sterling-connectdirect-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Connect:Direct on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_cd/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_cd/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_cd/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_cd/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export CD_NAMESPACE=sterling-cdnode01-dev export CD_NODENAME=CDNODE01","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_cd/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_cd.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_cdws/","text":"Deploy IBM Sterling Connect:Direct WebService on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export CDWS_NAMESPACE=sterling-cdws01 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_cdws.yml","title":"Deploy IBM Connect:Direct WebServices"},{"location":"playbooks/deploy_ocp_cdws/#deploy-ibm-sterling-connectdirect-webservice-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Connect:Direct WebService on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_cdws/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_cdws/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_cdws/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_cdws/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export CDWS_NAMESPACE=sterling-cdws01","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_cdws/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_cdws.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_itx_rs/","text":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export ITX_RS_NAMESPACE=ibm-itx-rs-dev01 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_itx_rs.yml","title":"Deploy IBM Sterling Transformation Server (ITX RS)"},{"location":"playbooks/deploy_ocp_itx_rs/#deploy-ibm-sterling-transformation-server-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_itx_rs/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_itx_rs/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_itx_rs/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_itx_rs/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export ITX_RS_NAMESPACE=ibm-itx-rs-dev01","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_itx_rs/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_itx_rs.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_itxa/","text":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export ITXA_INSTANCEID=dev09 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_itxa.yml","title":"Deploy IBM Sterling Transformation Advanced (ITXA)"},{"location":"playbooks/deploy_ocp_itxa/#deploy-ibm-sterling-transformation-server-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Transformation Server on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_itxa/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_itxa/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_itxa/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_itxa/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export ITXA_INSTANCEID=dev09","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_itxa/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_itxa.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_sb2b/","text":"Deploy IBM Sterling B2B Integrator on OpenShift using Ansible Scripts \uf0c1 Supported versions \uf0c1 Playbook will run the last version of Sterling B2Bi, but take care of Kubernetes/Openshift version is supported Sterling B2Bi (helm) Kubernetes OpenShift Helm 6.2.0.2 (3.0.4) >= 1.27 and <= 1.29 >= 4.14 and <= 4.15 >= 3.14.x 6.2.0.1 (3.0.1) >= 1.26 and <= 1.28 >= 4.13 and <= 4.14 >= 3.13.x 6.2.0.0 (3.0.0) >= 1.25 and <= 1.27 >= 4.12 and <= 4.13 >= 3.12.x Check with kubectl version Deploying Sterling B2B Integrator \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Change directory cd ansible-ibm-sterling Run playbook the playbook \uf0c1 1) First you need to provide SI_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SI_INSTANCEID=dev01 2) Provide de url domain SI_DOMAIN export SI_DOMAIN=ocp01-8...74-0000.us-south.containers.appdomain.cloud You can get this information from your OpenShift console url: Environment Sample URL IBM Cloud ocp01-8...74-0000.us-south.containers.appdomain.cloud IBM Techzone apps.34...6e.cloud.techzone.ibm.com 3) (Optional) change your version: We always run the last version of Sterling B2Bi, but you can choose to run a different version, based on your RH OpenShift version. export SI_VERSION=6.2.0.2 4) To run playbook the playbook ansible-playbook playbooks/deploy_sb2b.yml Deploy Sterling B2Bi using prebuilt db. \uf0c1 If your using SB2Bi for a prove of concept and get the environment provided in 10 minutes, i suggest to deploy using prebuilt db. ** You need to have a backup from a previous install, we cannot provide because of copyright **. 1) Define previous environment variables export ENTITLED_REGISTRY_KEY=<entitlement_key> export SI_INSTANCEID=dev01 export SI_DOMAIN=ocp01-8...74-0000.us-south.containers.appdomain.cloud 2) Provide your Sterling B2BI database backup export SI_PREBUILTDB_FILE=/tmp/B2BI_6202.tar.gz 3) disable database setup and upgrade export SI_DATASETUP_ENABLED=false export SI_DATASETUP_UPGRADE=false 4) Run prebuilt playbook ansible-playbook playbooks/deploy_sb2b_prebuiltdb.yml Environment Variable \uf0c1 Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY Y IBM Entitled Registry key SI_INSTANCEID Y Used to define your environment SI_DOMAIN Y Used to define your environment SI_LICENSETYPE no-prod N Specify the license edition as per license agreement. Valid value is prod or non-prod for Production and Non-production respectively. Remember that this parameter is crucial for IBM Licensing and Metering Service SI_SYSTEM_PASSPHRASE passw0rd N Name of system passphrase secret if available SI_ADMIN_MAILADDR admin@company.com N Provide the admin email address SI_ADMIN_SMTPHOST smtp.company.com N Provide the SMTP host details SI_DBVENDOR DB2 N Database vendor: DB2, Oracle, MSSQL SI_DBHOST N Database hostname/ip address SI_DBPORT N Database port SI_DBNAME B2BI N Database name SI_DBUSER db2inst1 N Database user SI_DBPASSWORD passw0rd N Database user password SI_ORACLESERVICENAME false N Oracle service name, must be true when database is Oracle SI_DATASETUP_ENABLED true N Enable database setup job execution SI_DATASETUP_UPGRADE false N Upgrade an older release SI_JMS_USERNAME N JMS Queue user SI_JMS_PASSWORD passw0rd N JMS Queue user password SI_JMS_KEYSTORE_PASSWORD N JMS Queue keystore password SI_JMS_TRUSTSTORE_PASSWORD N JMS Queue truststore password SI_LIBERTY_KEYSTORE_PASSWORD changeit N Liberty keystore password SI_SKIP_HELM false N Avoid to run helm, only generate values.yaml","title":"Deploy IBM Sterling B2B Integrator"},{"location":"playbooks/deploy_ocp_sb2b/#deploy-ibm-sterling-b2b-integrator-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling B2B Integrator on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_sb2b/#supported-versions","text":"Playbook will run the last version of Sterling B2Bi, but take care of Kubernetes/Openshift version is supported Sterling B2Bi (helm) Kubernetes OpenShift Helm 6.2.0.2 (3.0.4) >= 1.27 and <= 1.29 >= 4.14 and <= 4.15 >= 3.14.x 6.2.0.1 (3.0.1) >= 1.26 and <= 1.28 >= 4.13 and <= 4.14 >= 3.13.x 6.2.0.0 (3.0.0) >= 1.25 and <= 1.27 >= 4.12 and <= 4.13 >= 3.12.x Check with kubectl version","title":"Supported versions"},{"location":"playbooks/deploy_ocp_sb2b/#deploying-sterling-b2b-integrator","text":"","title":"Deploying Sterling B2B Integrator"},{"location":"playbooks/deploy_ocp_sb2b/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_sb2b/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_sb2b/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Change directory cd ansible-ibm-sterling","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_sb2b/#run-playbook-the-playbook","text":"1) First you need to provide SI_INSTANCEID, this is used to define your environment. Samples: dev01, dev02, poc01, qa01, prod01 export SI_INSTANCEID=dev01 2) Provide de url domain SI_DOMAIN export SI_DOMAIN=ocp01-8...74-0000.us-south.containers.appdomain.cloud You can get this information from your OpenShift console url: Environment Sample URL IBM Cloud ocp01-8...74-0000.us-south.containers.appdomain.cloud IBM Techzone apps.34...6e.cloud.techzone.ibm.com 3) (Optional) change your version: We always run the last version of Sterling B2Bi, but you can choose to run a different version, based on your RH OpenShift version. export SI_VERSION=6.2.0.2 4) To run playbook the playbook ansible-playbook playbooks/deploy_sb2b.yml","title":"Run playbook the playbook"},{"location":"playbooks/deploy_ocp_sb2b/#deploy-sterling-b2bi-using-prebuilt-db","text":"If your using SB2Bi for a prove of concept and get the environment provided in 10 minutes, i suggest to deploy using prebuilt db. ** You need to have a backup from a previous install, we cannot provide because of copyright **. 1) Define previous environment variables export ENTITLED_REGISTRY_KEY=<entitlement_key> export SI_INSTANCEID=dev01 export SI_DOMAIN=ocp01-8...74-0000.us-south.containers.appdomain.cloud 2) Provide your Sterling B2BI database backup export SI_PREBUILTDB_FILE=/tmp/B2BI_6202.tar.gz 3) disable database setup and upgrade export SI_DATASETUP_ENABLED=false export SI_DATASETUP_UPGRADE=false 4) Run prebuilt playbook ansible-playbook playbooks/deploy_sb2b_prebuiltdb.yml","title":"Deploy Sterling B2Bi using prebuilt db."},{"location":"playbooks/deploy_ocp_sb2b/#environment-variable","text":"Environment Variable Default Value Required Description ENTITLED_REGISTRY_KEY Y IBM Entitled Registry key SI_INSTANCEID Y Used to define your environment SI_DOMAIN Y Used to define your environment SI_LICENSETYPE no-prod N Specify the license edition as per license agreement. Valid value is prod or non-prod for Production and Non-production respectively. Remember that this parameter is crucial for IBM Licensing and Metering Service SI_SYSTEM_PASSPHRASE passw0rd N Name of system passphrase secret if available SI_ADMIN_MAILADDR admin@company.com N Provide the admin email address SI_ADMIN_SMTPHOST smtp.company.com N Provide the SMTP host details SI_DBVENDOR DB2 N Database vendor: DB2, Oracle, MSSQL SI_DBHOST N Database hostname/ip address SI_DBPORT N Database port SI_DBNAME B2BI N Database name SI_DBUSER db2inst1 N Database user SI_DBPASSWORD passw0rd N Database user password SI_ORACLESERVICENAME false N Oracle service name, must be true when database is Oracle SI_DATASETUP_ENABLED true N Enable database setup job execution SI_DATASETUP_UPGRADE false N Upgrade an older release SI_JMS_USERNAME N JMS Queue user SI_JMS_PASSWORD passw0rd N JMS Queue user password SI_JMS_KEYSTORE_PASSWORD N JMS Queue keystore password SI_JMS_TRUSTSTORE_PASSWORD N JMS Queue truststore password SI_LIBERTY_KEYSTORE_PASSWORD changeit N Liberty keystore password SI_SKIP_HELM false N Avoid to run helm, only generate values.yaml","title":"Environment Variable"},{"location":"playbooks/deploy_ocp_scc/","text":"Deploy IBM Sterling Control Center on OpenShift using Ansible Scripts \uf0c1 Deploying \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key> Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export SCC_INSTANCEID=dev01 export SCC_PRODUCTS=CCM,CCD export SCC_DOMAIN=ocp01-8...74-0000.us-south.containers.appdomain.cloud where SCC_PRODUCTS is the product that you want to install Product Description CCD Sterling Control Center Director CCM Sterling Control Center Monitor where SCC_DOMAIN is the suffix for your environment Environment Sample URL IBM Cloud ocp01-8...74-0000.us-south.containers.appdomain.cloud IBM Techzone apps.34...6e.cloud.techzone.ibm.com Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_scc.yml Advanced options \uf0c1","title":"Deploy IBM Sterling Control Center Monitor/Director (CCM/CCD)"},{"location":"playbooks/deploy_ocp_scc/#deploy-ibm-sterling-control-center-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Control Center on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_scc/#deploying","text":"","title":"Deploying"},{"location":"playbooks/deploy_ocp_scc/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable export ENTITLED_REGISTRY_KEY=<entitlement_key>","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_scc/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_scc/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_scc/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export SCC_INSTANCEID=dev01 export SCC_PRODUCTS=CCM,CCD export SCC_DOMAIN=ocp01-8...74-0000.us-south.containers.appdomain.cloud where SCC_PRODUCTS is the product that you want to install Product Description CCD Sterling Control Center Director CCM Sterling Control Center Monitor where SCC_DOMAIN is the suffix for your environment Environment Sample URL IBM Cloud ocp01-8...74-0000.us-south.containers.appdomain.cloud IBM Techzone apps.34...6e.cloud.techzone.ibm.com","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_scc/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_scc.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_scc/#advanced-options","text":"","title":"Advanced options"},{"location":"playbooks/deploy_ocp_seas/","text":"Deploy IBM Sterling External Authentication Server on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export SEAS_NAMESPACE=sterling-seas-dev01 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/deploy_seas.yml","title":"Deploy IBM Sterling External Authentication Server (SEAS)"},{"location":"playbooks/deploy_ocp_seas/#deploy-ibm-sterling-external-authentication-server-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling External Authentication Server on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_seas/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_seas/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_seas/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_seas/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export SEAS_NAMESPACE=sterling-seas-dev01","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_seas/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/deploy_seas.yml","title":"Run the Plabook"},{"location":"playbooks/deploy_ocp_ssp/","text":"Deploy IBM Sterling Secure Proxy on OpenShift using Ansible Scripts \uf0c1 IBM Entitled Registry \uf0c1 You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable Login on OpenShift \uf0c1 Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234 Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Exporting variables \uf0c1 To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export SSP_INSTANCEID=dev01 Run the Plabook \uf0c1 To run playbook the playbook ansible-playbook playbooks/dev_ssp.yml","title":"Deploy IBM Sterling Secure Proxy Server (SSP)"},{"location":"playbooks/deploy_ocp_ssp/#deploy-ibm-sterling-secure-proxy-on-openshift-using-ansible-scripts","text":"","title":"Deploy IBM Sterling Secure Proxy on OpenShift using Ansible Scripts"},{"location":"playbooks/deploy_ocp_ssp/#ibm-entitled-registry","text":"You must have kubectl , oc , git and ansible installed in your machine Log in the IBM Container software library with the IBMid and password that are associated with the entitled software. Click Get entitlement key . With key export variable","title":"IBM Entitled Registry"},{"location":"playbooks/deploy_ocp_ssp/#login-on-openshift","text":"Do a login in Openshift console and run the command: oc login --token=sha256~P...k --server=https://c....containers.cloud.xxx.com:31234","title":"Login on OpenShift"},{"location":"playbooks/deploy_ocp_ssp/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/deploy_ocp_ssp/#exporting-variables","text":"To run playbook the playbook cd ansible-ibm-sterling export ANSIBLE_CONFIG=< FULL_PATH >/ansible.cfg export ENTITLED_REGISTRY_KEY=<entitlement_key> export SSP_INSTANCEID=dev01","title":"Exporting variables"},{"location":"playbooks/deploy_ocp_ssp/#run-the-plabook","text":"To run playbook the playbook ansible-playbook playbooks/dev_ssp.yml","title":"Run the Plabook"},{"location":"playbooks/setup_b2b/","text":"Getting start \uf0c1 Prerequisites \uf0c1 Download installation files: \uf0c1 Product Name PartNum Filename Description | IBM DB2 V11.5.x | | DB2S_11.5.4_MPML.tar.gz | IBM DB2 V11.5.4 Multi-platform Multi-language| | IBM Java SDK/JRE | M06M9ML | SB2BI_6.1.2_MP_ML_JDK.zip | IBM Sterling B2B Integrator V6.1.2 or IBM Sterling File Gateway V6.1.2 Java SDK/JRE Multiplatform| | IBM Sterling B2B Integrator | M06MCML | SB2BI_6.1.2_MP_ML.zip | IBM Sterling B2B Integrator V6.1.2 for Multiplatform Multilingual| | IBM Java Unrestricted Policy | | unrestrictedpolicyfiles.zip | | Install Nginx \uf0c1 First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp <files> /usr/share/nginx/html Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Create a inventory file \uf0c1 Copy from template cd ansible-ibm-sterling cp environments/sb2b-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like DB2 server, Sterling Integrator node name, ... Provide information for you nginx server Running playbooks \uf0c1 Install Sterling B2B (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-sb2b.yml","title":"Install IBM Sterling B2B Integrator 6.1.2"},{"location":"playbooks/setup_b2b/#getting-start","text":"","title":"Getting start"},{"location":"playbooks/setup_b2b/#prerequisites","text":"","title":"Prerequisites"},{"location":"playbooks/setup_b2b/#download-installation-files","text":"Product Name PartNum Filename Description | IBM DB2 V11.5.x | | DB2S_11.5.4_MPML.tar.gz | IBM DB2 V11.5.4 Multi-platform Multi-language| | IBM Java SDK/JRE | M06M9ML | SB2BI_6.1.2_MP_ML_JDK.zip | IBM Sterling B2B Integrator V6.1.2 or IBM Sterling File Gateway V6.1.2 Java SDK/JRE Multiplatform| | IBM Sterling B2B Integrator | M06MCML | SB2BI_6.1.2_MP_ML.zip | IBM Sterling B2B Integrator V6.1.2 for Multiplatform Multilingual| | IBM Java Unrestricted Policy | | unrestrictedpolicyfiles.zip | |","title":"Download installation files:"},{"location":"playbooks/setup_b2b/#install-nginx","text":"First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp <files> /usr/share/nginx/html","title":"Install Nginx"},{"location":"playbooks/setup_b2b/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/setup_b2b/#create-a-inventory-file","text":"Copy from template cd ansible-ibm-sterling cp environments/sb2b-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like DB2 server, Sterling Integrator node name, ... Provide information for you nginx server","title":"Create a inventory file"},{"location":"playbooks/setup_b2b/#running-playbooks","text":"Install Sterling B2B (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-sb2b.yml","title":"Running playbooks"},{"location":"playbooks/setup_cd/","text":"Getting start \uf0c1 Prerequisites \uf0c1 Download installation files: \uf0c1 Product Name PartNum Filename Description IBM Connect:Direct IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z IBM Connect:Direct 6.2.x Install Nginx \uf0c1 First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z /usr/share/nginx/html Cloning ansible-ibm-websphere from git \uf0c1 git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git Create a inventory file \uf0c1 Copy from template cd ansible-ibm-sterling cp environments/cd-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like C:D node name and ip address. Provide information for you nginx server Running playbooks \uf0c1 Install Connect:Direct (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-cd.yml","title":"Install IBM Connect:Direct 6.2.x"},{"location":"playbooks/setup_cd/#getting-start","text":"","title":"Getting start"},{"location":"playbooks/setup_cd/#prerequisites","text":"","title":"Prerequisites"},{"location":"playbooks/setup_cd/#download-installation-files","text":"Product Name PartNum Filename Description IBM Connect:Direct IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z IBM Connect:Direct 6.2.x","title":"Download installation files:"},{"location":"playbooks/setup_cd/#install-nginx","text":"First, ensure your system is up-to-date with the latest packages. Nginx is not available in the default repositories of Red Hat-based systems. You need to install the EPEL (Extra Packages for Enterprise Linux) repository. sudo yum update -y sudo yum install epel-release -y Now you can install Nginx using the following command: sudo yum install nginx -y After installing Nginx, start the Nginx service and ensure that Nginx starts automatically at boot time, with the following command: sudo systemctl start nginx sudo systemctl enable nginx 3) Copy download files to Web Server cp IBM_CD_V6.2_UNIX_RedHat.Z.tar.Z /usr/share/nginx/html","title":"Install Nginx"},{"location":"playbooks/setup_cd/#cloning-ansible-ibm-websphere-from-git","text":"git clone https://github.com/ibm-sterling-devops/ansible-ibm-sterling.git","title":"Cloning ansible-ibm-websphere from git"},{"location":"playbooks/setup_cd/#create-a-inventory-file","text":"Copy from template cd ansible-ibm-sterling cp environments/cd-servers.dev.sample environments/hosts.dev Edit and provide information for your environment, like C:D node name and ip address. Provide information for you nginx server","title":"Create a inventory file"},{"location":"playbooks/setup_cd/#running-playbooks","text":"Install Connect:Direct (standalone) cd ansible-ibm-sterling ansible-playbook -i environments/hosts.dev -u root playbooks/setup-cd.yml","title":"Running playbooks"},{"location":"roles/cd_deploy/","text":"Role cd_deploy \uf0c1","title":"cd_deploy"},{"location":"roles/cd_deploy/#role-cd_deploy","text":"","title":"Role cd_deploy"},{"location":"roles/cdws_deploy/","text":"Role cdws_deploy \uf0c1","title":"cdws_deploy"},{"location":"roles/cdws_deploy/#role-cdws_deploy","text":"","title":"Role cdws_deploy"},{"location":"roles/itx_rs_deploy/","text":"Role ITX RS \uf0c1 export ITX_RS_NAMESPACE=ibm-itx-rs-dev01 ansible-playbook playbooks/deploy_itx_rs.yml","title":"itx_rs_deploy"},{"location":"roles/itx_rs_deploy/#role-itx-rs","text":"export ITX_RS_NAMESPACE=ibm-itx-rs-dev01 ansible-playbook playbooks/deploy_itx_rs.yml","title":"Role ITX RS"},{"location":"roles/itxa_deploy/","text":"Role SSP CM \uf0c1 SSP_CM_NAMESPACE SSP_CM_VERSION: 6.1.0.0.06 SSP_CM_LICENSETYPE: default value: non-prod suported values: prod or no-prod","title":"itxa_deploy"},{"location":"roles/itxa_deploy/#role-ssp-cm","text":"SSP_CM_NAMESPACE SSP_CM_VERSION: 6.1.0.0.06 SSP_CM_LICENSETYPE: default value: non-prod suported values: prod or no-prod","title":"Role SSP CM"},{"location":"roles/sb2bi_deploy/","text":"# Role sb2b_deploy \uf0c1","title":"# Role sb2b_deploy"},{"location":"roles/sb2bi_deploy/#role-sb2b_deploy","text":"","title":"# Role sb2b_deploy"},{"location":"roles/sb2bi_setup_db2/","text":"sb2bi_setup_db2 \uf0c1 This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling B2Bi. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'. Role Variables \uf0c1 si_instanceid \uf0c1 The instance id of the Sterling B2Bi to execute the setup in. Required Environment Variable: SI_INSTANCEID Default Value: None db2_namespace \uf0c1 The namespace where the Db2 instance is running. Default Value: sterling-b2bi-{{ si_instanceid }}-db2 db2_instance_name \uf0c1 The name of the db2 instance to execute the setup in. Default Value: db2inst1 db2_username \uf0c1 The username that will be used to connect to the database specified by db2_dbname . Default Value: db2inst1 db2_dbname \uf0c1 The name of the database in the instance to connect to when executing the setup script. Default Value: B2BI db2_container \uf0c1 The name of the container to connect to when executing the setup script. Default Value: mydb2 License \uf0c1 EPL-2.0","title":"sb2bi_setup_db2"},{"location":"roles/sb2bi_setup_db2/#sb2bi_setup_db2","text":"This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling B2Bi. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.","title":"sb2bi_setup_db2"},{"location":"roles/sb2bi_setup_db2/#role-variables","text":"","title":"Role Variables"},{"location":"roles/sb2bi_setup_db2/#si_instanceid","text":"The instance id of the Sterling B2Bi to execute the setup in. Required Environment Variable: SI_INSTANCEID Default Value: None","title":"si_instanceid"},{"location":"roles/sb2bi_setup_db2/#db2_namespace","text":"The namespace where the Db2 instance is running. Default Value: sterling-b2bi-{{ si_instanceid }}-db2","title":"db2_namespace"},{"location":"roles/sb2bi_setup_db2/#db2_instance_name","text":"The name of the db2 instance to execute the setup in. Default Value: db2inst1","title":"db2_instance_name"},{"location":"roles/sb2bi_setup_db2/#db2_username","text":"The username that will be used to connect to the database specified by db2_dbname . Default Value: db2inst1","title":"db2_username"},{"location":"roles/sb2bi_setup_db2/#db2_dbname","text":"The name of the database in the instance to connect to when executing the setup script. Default Value: B2BI","title":"db2_dbname"},{"location":"roles/sb2bi_setup_db2/#db2_container","text":"The name of the container to connect to when executing the setup script. Default Value: mydb2","title":"db2_container"},{"location":"roles/sb2bi_setup_db2/#license","text":"EPL-2.0","title":"License"},{"location":"roles/scc_deploy/","text":"# Role scc_deploy \uf0c1","title":"scc_deploy"},{"location":"roles/scc_deploy/#role-scc_deploy","text":"","title":"# Role scc_deploy"},{"location":"roles/scc_setup_db2/","text":"sb2bi_setup_db2 \uf0c1 This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling B2Bi. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'. Role Variables \uf0c1 si_instanceid \uf0c1 The instance id of the Sterling B2Bi to execute the setup in. Required Environment Variable: SI_INSTANCEID Default Value: None db2_namespace \uf0c1 The namespace where the Db2 instance is running. Default Value: sterling-b2bi-{{ si_instanceid }}-db2 db2_instance_name \uf0c1 The name of the db2 instance to execute the setup in. Default Value: db2inst1 db2_username \uf0c1 The username that will be used to connect to the database specified by db2_dbname . Default Value: db2inst1 db2_dbname \uf0c1 The name of the database in the instance to connect to when executing the setup script. Default Value: B2BI db2_container \uf0c1 The name of the container to connect to when executing the setup script. Default Value: mydb2 License \uf0c1 EPL-2.0","title":"scc_setup_db2"},{"location":"roles/scc_setup_db2/#sb2bi_setup_db2","text":"This role will perform some initial setup on the Db2 instance that is needed to prepare it for use with the Sterling B2Bi. The role will copy a bash script (setupdb.sh) into the Db2 pod and execute it inside the container, this script will perform a number of configuration changes to the database like 'CREATE DATABASE, CREATE TABLESPACES, ...'.","title":"sb2bi_setup_db2"},{"location":"roles/scc_setup_db2/#role-variables","text":"","title":"Role Variables"},{"location":"roles/scc_setup_db2/#si_instanceid","text":"The instance id of the Sterling B2Bi to execute the setup in. Required Environment Variable: SI_INSTANCEID Default Value: None","title":"si_instanceid"},{"location":"roles/scc_setup_db2/#db2_namespace","text":"The namespace where the Db2 instance is running. Default Value: sterling-b2bi-{{ si_instanceid }}-db2","title":"db2_namespace"},{"location":"roles/scc_setup_db2/#db2_instance_name","text":"The name of the db2 instance to execute the setup in. Default Value: db2inst1","title":"db2_instance_name"},{"location":"roles/scc_setup_db2/#db2_username","text":"The username that will be used to connect to the database specified by db2_dbname . Default Value: db2inst1","title":"db2_username"},{"location":"roles/scc_setup_db2/#db2_dbname","text":"The name of the database in the instance to connect to when executing the setup script. Default Value: B2BI","title":"db2_dbname"},{"location":"roles/scc_setup_db2/#db2_container","text":"The name of the container to connect to when executing the setup script. Default Value: mydb2","title":"db2_container"},{"location":"roles/scc_setup_db2/#license","text":"EPL-2.0","title":"License"},{"location":"roles/seas_deploy/","text":"Role SEAS \uf0c1 SEAS_NAMESPACE SEAS_VERSION: 6.1.0.0.06 SEAS_SYS_PASSPHRASE: default value: Passw0rd@ SEAS_ADMIN_PASSWORD default value: Passw0rd@ SEAS_KEYSTORE_PASSPHRASE default value: Change1t@ SEAS_TRUSTSTOREPASSWORD default value: Change1t@ SEAS_LICENSETYPE: default value: non-prod suported values: prod or no-prod","title":"seas_deploy"},{"location":"roles/seas_deploy/#role-seas","text":"SEAS_NAMESPACE SEAS_VERSION: 6.1.0.0.06 SEAS_SYS_PASSPHRASE: default value: Passw0rd@ SEAS_ADMIN_PASSWORD default value: Passw0rd@ SEAS_KEYSTORE_PASSPHRASE default value: Change1t@ SEAS_TRUSTSTOREPASSWORD default value: Change1t@ SEAS_LICENSETYPE: default value: non-prod suported values: prod or no-prod","title":"Role SEAS"},{"location":"roles/ssp_cm_deploy/","text":"Role SSP CM \uf0c1 SSP_CM_NAMESPACE SSP_CM_VERSION: 6.1.0.0.06 SSP_CM_LICENSETYPE: default value: non-prod suported values: prod or no-prod","title":"ssp_cm_deploy"},{"location":"roles/ssp_cm_deploy/#role-ssp-cm","text":"SSP_CM_NAMESPACE SSP_CM_VERSION: 6.1.0.0.06 SSP_CM_LICENSETYPE: default value: non-prod suported values: prod or no-prod","title":"Role SSP CM"},{"location":"roles/ssp_deploy/","text":"Role SSP CM \uf0c1 SSP_CM_NAMESPACE SSP_CM_VERSION: 6.1.0.0.06 SSP_CM_LICENSETYPE: default value: non-prod suported values: prod or no-prod","title":"ssp_deploy"},{"location":"roles/ssp_deploy/#role-ssp-cm","text":"SSP_CM_NAMESPACE SSP_CM_VERSION: 6.1.0.0.06 SSP_CM_LICENSETYPE: default value: non-prod suported values: prod or no-prod","title":"Role SSP CM"},{"location":"roles/ssp_ps_deploy/","text":"Role SSP CM \uf0c1 SSP_CM_NAMESPACE SSP_CM_VERSION: 6.1.0.0.06 SSP_CM_LICENSETYPE: default value: non-prod suported values: prod or no-prod","title":"ssp_ps_deploy"},{"location":"roles/ssp_ps_deploy/#role-ssp-cm","text":"SSP_CM_NAMESPACE SSP_CM_VERSION: 6.1.0.0.06 SSP_CM_LICENSETYPE: default value: non-prod suported values: prod or no-prod","title":"Role SSP CM"}]}